                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 4.0.0 #11528 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module report
                                      6 	.optsdcc -mmcs51 --model-large
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _nrf24_transmit_status
                                     12 	.globl _nrf24_transmit
                                     13 	.globl _nrf24_device
                                     14 	.globl _nrf24_CE
                                     15 	.globl _get_current_time
                                     16 	.globl _gpioWrite
                                     17 	.globl _gpioRead
                                     18 	.globl _gpioConfigure
                                     19 	.globl _delay10us
                                     20 	.globl _vsprintf
                                     21 	.globl _printf
                                     22 	.globl _S1SM0_FE
                                     23 	.globl _T1IE
                                     24 	.globl _T0IE
                                     25 	.globl _T1RUN
                                     26 	.globl _T0RUN
                                     27 	.globl _CY
                                     28 	.globl _AC
                                     29 	.globl _F0
                                     30 	.globl _RS1
                                     31 	.globl _RS0
                                     32 	.globl _OV
                                     33 	.globl _F1
                                     34 	.globl _P
                                     35 	.globl _EA
                                     36 	.globl _INT1IE
                                     37 	.globl _INT0IE
                                     38 	.globl _INT1TR
                                     39 	.globl _INT0TR
                                     40 	.globl _P5_5
                                     41 	.globl _P5_4
                                     42 	.globl _P5_3
                                     43 	.globl _P5_2
                                     44 	.globl _P5_1
                                     45 	.globl _P5_0
                                     46 	.globl _P3_7
                                     47 	.globl _P3_6
                                     48 	.globl _P3_5
                                     49 	.globl _P3_4
                                     50 	.globl _P3_3
                                     51 	.globl _P3_2
                                     52 	.globl _P3_1
                                     53 	.globl _P3_0
                                     54 	.globl _P2_7
                                     55 	.globl _P2_6
                                     56 	.globl _P2_5
                                     57 	.globl _P2_4
                                     58 	.globl _P2_3
                                     59 	.globl _P2_2
                                     60 	.globl _P2_1
                                     61 	.globl _P2_0
                                     62 	.globl _P1_7
                                     63 	.globl _P1_6
                                     64 	.globl _P1_5
                                     65 	.globl _P1_4
                                     66 	.globl _P1_3
                                     67 	.globl _P1_2
                                     68 	.globl _P1_1
                                     69 	.globl _P1_0
                                     70 	.globl _USBADR
                                     71 	.globl _USBCON
                                     72 	.globl _USBDAT
                                     73 	.globl _USBCLK
                                     74 	.globl _S4BUF
                                     75 	.globl _S4CON
                                     76 	.globl _S3BUF
                                     77 	.globl _S3CON
                                     78 	.globl _S2BUF
                                     79 	.globl _S2CON
                                     80 	.globl _S1BUF
                                     81 	.globl _S1CON
                                     82 	.globl _SADEN
                                     83 	.globl _SADDR
                                     84 	.globl _AUXINTIF
                                     85 	.globl _T3
                                     86 	.globl _T3L
                                     87 	.globl _T3H
                                     88 	.globl _T4
                                     89 	.globl _T4L
                                     90 	.globl _T4H
                                     91 	.globl _T4T3M
                                     92 	.globl _WDT_CONTR
                                     93 	.globl _AUXR
                                     94 	.globl _T2
                                     95 	.globl _T2H
                                     96 	.globl _T2L
                                     97 	.globl _T1
                                     98 	.globl _T1H
                                     99 	.globl _T1L
                                    100 	.globl _T0
                                    101 	.globl _T0H
                                    102 	.globl _T0L
                                    103 	.globl _TMOD
                                    104 	.globl _TCON
                                    105 	.globl _IRTRIM
                                    106 	.globl _LIRTRIM
                                    107 	.globl _IRCBAND
                                    108 	.globl _SPDAT
                                    109 	.globl _SPCTL
                                    110 	.globl _SPSTAT
                                    111 	.globl _WKTC
                                    112 	.globl _WKTCH
                                    113 	.globl _WKTCL
                                    114 	.globl _BUS_SPEED
                                    115 	.globl _P_SW2
                                    116 	.globl _P_SW1
                                    117 	.globl _RSTCFG
                                    118 	.globl _PCON
                                    119 	.globl _B
                                    120 	.globl _ACC
                                    121 	.globl _PSW
                                    122 	.globl _SP
                                    123 	.globl _IP3H
                                    124 	.globl _IP3L
                                    125 	.globl _IP2H
                                    126 	.globl _IP2L
                                    127 	.globl _IE2
                                    128 	.globl _IP1H
                                    129 	.globl _IP1L
                                    130 	.globl _IE1
                                    131 	.globl _INT_CLKO
                                    132 	.globl _IAP_TPS
                                    133 	.globl _IAP_CONTR
                                    134 	.globl _IAP_TRIG
                                    135 	.globl _IAP_CMD
                                    136 	.globl _IAP_ADDR
                                    137 	.globl _IAP_ADDRL
                                    138 	.globl _IAP_ADDRH
                                    139 	.globl _IAP_DATA
                                    140 	.globl _P5M0
                                    141 	.globl _P5M1
                                    142 	.globl _P5
                                    143 	.globl _P3M0
                                    144 	.globl _P3M1
                                    145 	.globl _P3
                                    146 	.globl _P2M0
                                    147 	.globl _P2M1
                                    148 	.globl _P2
                                    149 	.globl _P1M0
                                    150 	.globl _P1M1
                                    151 	.globl _P1
                                    152 	.globl _TA
                                    153 	.globl _DPH1
                                    154 	.globl _DPL1
                                    155 	.globl _DPS
                                    156 	.globl _DP
                                    157 	.globl _DPH
                                    158 	.globl _DPL
                                    159 	.globl _CMPCR2
                                    160 	.globl _CMPCR1
                                    161 	.globl _DMA_ADC_AMT
                                    162 	.globl _ADCCFG
                                    163 	.globl _ADC_RES
                                    164 	.globl _ADC_RESL
                                    165 	.globl _ADC_RESH
                                    166 	.globl _ADC_CONTR
                                    167 	.globl _DMA_UR4R_TXAL
                                    168 	.globl _DMA_UR4R_TXAH
                                    169 	.globl _DMA_UR4R_DONE
                                    170 	.globl _DMA_UR4R_AMT
                                    171 	.globl _DMA_UR4R_STA
                                    172 	.globl _DMA_UR4R_CR
                                    173 	.globl _DMA_UR4R_CFG
                                    174 	.globl _DMA_UR4T_TXAL
                                    175 	.globl _DMA_UR4T_TXAH
                                    176 	.globl _DMA_UR4T_DONE
                                    177 	.globl _DMA_UR4T_AMT
                                    178 	.globl _DMA_UR4T_STA
                                    179 	.globl _DMA_UR4T_CR
                                    180 	.globl _DMA_UR4T_CFG
                                    181 	.globl _DMA_UR3R_TXAL
                                    182 	.globl _DMA_UR3R_TXAH
                                    183 	.globl _DMA_UR3R_DONE
                                    184 	.globl _DMA_UR3R_AMT
                                    185 	.globl _DMA_UR3R_STA
                                    186 	.globl _DMA_UR3R_CR
                                    187 	.globl _DMA_UR3R_CFG
                                    188 	.globl _DMA_UR3T_TXAL
                                    189 	.globl _DMA_UR3T_TXAH
                                    190 	.globl _DMA_UR3T_DONE
                                    191 	.globl _DMA_UR3T_AMT
                                    192 	.globl _DMA_UR3T_STA
                                    193 	.globl _DMA_UR3T_CR
                                    194 	.globl _DMA_UR3T_CFG
                                    195 	.globl _DMA_UR2R_TXAL
                                    196 	.globl _DMA_UR2R_TXAH
                                    197 	.globl _DMA_UR2R_DONE
                                    198 	.globl _DMA_UR2R_AMT
                                    199 	.globl _DMA_UR2R_STA
                                    200 	.globl _DMA_UR2R_CR
                                    201 	.globl _DMA_UR2R_CFG
                                    202 	.globl _DMA_UR2T_TXAL
                                    203 	.globl _DMA_UR2T_TXAH
                                    204 	.globl _DMA_UR2T_DONE
                                    205 	.globl _DMA_UR2T_AMT
                                    206 	.globl _DMA_UR2T_STA
                                    207 	.globl _DMA_UR2T_CR
                                    208 	.globl _DMA_UR2T_CFG
                                    209 	.globl _DMA_UR1R_TXAL
                                    210 	.globl _DMA_UR1R_TXAH
                                    211 	.globl _DMA_UR1R_DONE
                                    212 	.globl _DMA_UR1R_AMT
                                    213 	.globl _DMA_UR1R_STA
                                    214 	.globl _DMA_UR1R_CR
                                    215 	.globl _DMA_UR1R_CFG
                                    216 	.globl _DMA_UR1T_TXAL
                                    217 	.globl _DMA_UR1T_TXAH
                                    218 	.globl _DMA_UR1T_DONE
                                    219 	.globl _DMA_URTX_AMT
                                    220 	.globl _DMA_UR1T_STA
                                    221 	.globl _DMA_UR1T_CR
                                    222 	.globl _DMA_UR1T_CFG
                                    223 	.globl _TM4PS
                                    224 	.globl _TM3PS
                                    225 	.globl _TM2PS
                                    226 	.globl _IRC48MCR
                                    227 	.globl _IRCDB
                                    228 	.globl _MCLKOCR
                                    229 	.globl _CKSEL
                                    230 	.globl _IRC32KCR
                                    231 	.globl _X32KCR
                                    232 	.globl _XOSCCR
                                    233 	.globl _HIRCCR
                                    234 	.globl _CLKDIV
                                    235 	.globl _DMA_SPI_CFG2
                                    236 	.globl _DMA_SPI_RXAL
                                    237 	.globl _DMA_SPI_RXAH
                                    238 	.globl _DMA_SPI_TXAL
                                    239 	.globl _DMA_SPI_TXAH
                                    240 	.globl _DMA_SPI_DONE
                                    241 	.globl _DMA_SPI_AMT
                                    242 	.globl _DMA_SPI_STA
                                    243 	.globl _DMA_SPI_CR
                                    244 	.globl _DMA_SPI_CFG
                                    245 	.globl _SSEC
                                    246 	.globl _SEC
                                    247 	.globl _MIN
                                    248 	.globl _HOUR
                                    249 	.globl _DAY
                                    250 	.globl _MONTH
                                    251 	.globl _YEAR
                                    252 	.globl _INISSEC
                                    253 	.globl _INISEC
                                    254 	.globl _INIMIN
                                    255 	.globl _INIHOUR
                                    256 	.globl _INIDAY
                                    257 	.globl _INIMONTH
                                    258 	.globl _INIYEAR
                                    259 	.globl _ALASSEC
                                    260 	.globl _ALASEC
                                    261 	.globl _ALAMIN
                                    262 	.globl _ALAHOUR
                                    263 	.globl _RTCIF
                                    264 	.globl _RTCIEN
                                    265 	.globl _RTCCFG
                                    266 	.globl _RTCCR
                                    267 	.globl _PWMB_OISR
                                    268 	.globl _PWMB_DTR
                                    269 	.globl _PWMB_BKR
                                    270 	.globl _PWMB_CCR4L
                                    271 	.globl _PWMB_CCR4H
                                    272 	.globl _PWMB_CCR3L
                                    273 	.globl _PWMB_CCR3H
                                    274 	.globl _PWMB_CCR2L
                                    275 	.globl _PWMB_CCR2H
                                    276 	.globl _PWMB_CCR1L
                                    277 	.globl _PWMB_CCR1H
                                    278 	.globl _PWMB_RCR
                                    279 	.globl _PWMB_ARRL
                                    280 	.globl _PWMB_ARRH
                                    281 	.globl _PWMB_PSCRL
                                    282 	.globl _PWMB_PSCRH
                                    283 	.globl _PWMB_CNTRL
                                    284 	.globl _PWMB_CNTRH
                                    285 	.globl _PWMB_CCER2
                                    286 	.globl _PWMB_CCER1
                                    287 	.globl _PWMB_CCMR4
                                    288 	.globl _PWMB_CCMR3
                                    289 	.globl _PWMB_CCMR2
                                    290 	.globl _PWMB_CCMR1
                                    291 	.globl _PWMB_EGR
                                    292 	.globl _PWMB_SR2
                                    293 	.globl _PWMB_SR1
                                    294 	.globl _PWMB_IER
                                    295 	.globl _PWMB_ETR
                                    296 	.globl _PWMB_SMCR
                                    297 	.globl _PWMB_CR2
                                    298 	.globl _PWMB_CR1
                                    299 	.globl _PWMA_OISR
                                    300 	.globl _PWMA_DTR
                                    301 	.globl _PWMA_BKR
                                    302 	.globl _PWMA_CCR4L
                                    303 	.globl _PWMA_CCR4H
                                    304 	.globl _PWMA_CCR3L
                                    305 	.globl _PWMA_CCR3H
                                    306 	.globl _PWMA_CCR2L
                                    307 	.globl _PWMA_CCR2H
                                    308 	.globl _PWMA_CCR1L
                                    309 	.globl _PWMA_CCR1H
                                    310 	.globl _PWMA_RCR
                                    311 	.globl _PWMA_ARRL
                                    312 	.globl _PWMA_ARRH
                                    313 	.globl _PWMA_PSCRL
                                    314 	.globl _PWMA_PSCRH
                                    315 	.globl _PWMA_CNTRL
                                    316 	.globl _PWMA_CNTRH
                                    317 	.globl _PWMA_CCER2
                                    318 	.globl _PWMA_CCER1
                                    319 	.globl _PWMA_CCMR4
                                    320 	.globl _PWMA_CCMR3
                                    321 	.globl _PWMA_CCMR2
                                    322 	.globl _PWMA_CCMR1
                                    323 	.globl _PWMA_EGR
                                    324 	.globl _PWMA_SR2
                                    325 	.globl _PWMA_SR1
                                    326 	.globl _PWMA_IER
                                    327 	.globl _PWMA_ETR
                                    328 	.globl _PWMA_SMCR
                                    329 	.globl _PWMA_CR2
                                    330 	.globl _PWMA_CR1
                                    331 	.globl _PWMB_IOAUX
                                    332 	.globl _PWMB_PS
                                    333 	.globl _PWMB_ENO
                                    334 	.globl _PWMB_ETRPS
                                    335 	.globl _PWMA_IOAUX
                                    336 	.globl _PWMA_PS
                                    337 	.globl _PWMA_ENO
                                    338 	.globl _PWMA_ETRPS
                                    339 	.globl _RSTFLAG
                                    340 	.globl _SPFUNC
                                    341 	.globl _OPCON
                                    342 	.globl _ARCON
                                    343 	.globl _MD4
                                    344 	.globl _MD5
                                    345 	.globl _MD0
                                    346 	.globl _MD1
                                    347 	.globl _MD2
                                    348 	.globl _MD3
                                    349 	.globl _DMA_LCM_RXAL
                                    350 	.globl _DMA_LCM_RXAH
                                    351 	.globl _DMA_LCM_TXAL
                                    352 	.globl _DMA_LCM_TXAH
                                    353 	.globl _DMA_LCM_DONE
                                    354 	.globl _DMA_LCM_AMT
                                    355 	.globl _DMA_LCM_STA
                                    356 	.globl _DMA_LCM_CR
                                    357 	.globl _DMA_LCM_CFG
                                    358 	.globl _LCMIDDAT
                                    359 	.globl _LCMIDDATH
                                    360 	.globl _LCMIDDATL
                                    361 	.globl _LCMSTA
                                    362 	.globl _LCMCR
                                    363 	.globl _LCMCFG2
                                    364 	.globl _LCMCFG
                                    365 	.globl _I2CMSAUX
                                    366 	.globl _I2CRXD
                                    367 	.globl _I2CTXD
                                    368 	.globl _I2CSLADR
                                    369 	.globl _I2CSLST
                                    370 	.globl _I2CSLCR
                                    371 	.globl _I2CMSST
                                    372 	.globl _I2CMSCR
                                    373 	.globl _I2CCFG
                                    374 	.globl _PINIPH
                                    375 	.globl _PINIPL
                                    376 	.globl _P5IE
                                    377 	.globl _P5DR
                                    378 	.globl _P5SR
                                    379 	.globl _P5NCS
                                    380 	.globl _P5PU
                                    381 	.globl _P5WKUE
                                    382 	.globl _P5IM1
                                    383 	.globl _P5IM0
                                    384 	.globl _P5INTF
                                    385 	.globl _P5INTE
                                    386 	.globl _P3IE
                                    387 	.globl _P3DR
                                    388 	.globl _P3SR
                                    389 	.globl _P3NCS
                                    390 	.globl _P3PU
                                    391 	.globl _P3WKUE
                                    392 	.globl _P3IM1
                                    393 	.globl _P3IM0
                                    394 	.globl _P3INTF
                                    395 	.globl _P3INTE
                                    396 	.globl _P2IE
                                    397 	.globl _P2DR
                                    398 	.globl _P2SR
                                    399 	.globl _P2NCS
                                    400 	.globl _P2PU
                                    401 	.globl _P2WKUE
                                    402 	.globl _P2IM1
                                    403 	.globl _P2IM0
                                    404 	.globl _P2INTF
                                    405 	.globl _P2INTE
                                    406 	.globl _P1IE
                                    407 	.globl _P1DR
                                    408 	.globl _P1SR
                                    409 	.globl _P1NCS
                                    410 	.globl _P1PU
                                    411 	.globl _P1WKUE
                                    412 	.globl _P1IM1
                                    413 	.globl _P1IM0
                                    414 	.globl _P1INTF
                                    415 	.globl _P1INTE
                                    416 	.globl _DMA_M2M_RXAL
                                    417 	.globl _DMA_M2M_RXAH
                                    418 	.globl _DMA_M2M_TXAL
                                    419 	.globl _DMA_M2M_TXAH
                                    420 	.globl _DMA_M2M_DONE
                                    421 	.globl _DMA_M2M_AMT
                                    422 	.globl _DMA_M2M_STA
                                    423 	.globl _DMA_M2M_CR
                                    424 	.globl _DMA_M2M_CFG
                                    425 	.globl _CMPEXCFG
                                    426 	.globl _CHIP_PACKAGE_TYPE
                                    427 	.globl _CHIP_TEST_DAY_BCD
                                    428 	.globl _CHIP_TEST_MONTH_BCD
                                    429 	.globl _CHIP_TEST_YEAR_BCD
                                    430 	.globl _PROGRAM_AREA_SIZE
                                    431 	.globl _VRTRIM_44MHz
                                    432 	.globl _VRTRIM_27MHz
                                    433 	.globl _VRTRIM_10MHz
                                    434 	.globl _VRTRIM_6MHz
                                    435 	.globl _IRTRIM_48MHz
                                    436 	.globl _IRTRIM_44_2368MHz
                                    437 	.globl _IRTRIM_40MHz
                                    438 	.globl _IRTRIM_36_864MHz
                                    439 	.globl _IRTRIM_35MHz
                                    440 	.globl _IRTRIM_33_1776MHz
                                    441 	.globl _IRTRIM_30MHz
                                    442 	.globl _IRTRIM_27MHz
                                    443 	.globl _IRTRIM_24MHz
                                    444 	.globl _IRTRIM_22_1184MHz
                                    445 	.globl ___OTHER_INFO
                                    446 	.globl _CHIP_GUID
                                    447 	.globl _DMA_ADC_CHSW1
                                    448 	.globl _DMA_ADC_CHSW0
                                    449 	.globl _DMA_ADC_CFG2
                                    450 	.globl _DMA_ADC_RXAL
                                    451 	.globl _DMA_ADC_RXAH
                                    452 	.globl _DMA_ADC_STA
                                    453 	.globl _DMA_ADC_CR
                                    454 	.globl _DMA_ADC_CFG
                                    455 	.globl _ADCEXCFG
                                    456 	.globl _ADCTIM
                                    457 	.globl _uint8_strlen
                                    458 	.globl _report_init
                                    459 	.globl _report_toggle_led
                                    460 	.globl _report
                                    461 ;--------------------------------------------------------
                                    462 ; special function registers
                                    463 ;--------------------------------------------------------
                                    464 	.area RSEG    (ABS,DATA)
      000000                        465 	.org 0x0000
                           0000BC   466 _ADC_CONTR	=	0x00bc
                           0000BD   467 _ADC_RESH	=	0x00bd
                           0000BE   468 _ADC_RESL	=	0x00be
                           00BDBE   469 _ADC_RES	=	0xbdbe
                           0000DE   470 _ADCCFG	=	0x00de
                           0000FA   471 _DMA_ADC_AMT	=	0x00fa
                           0000E6   472 _CMPCR1	=	0x00e6
                           0000E7   473 _CMPCR2	=	0x00e7
                           000082   474 _DPL	=	0x0082
                           000083   475 _DPH	=	0x0083
                           008382   476 _DP	=	0x8382
                           0000E3   477 _DPS	=	0x00e3
                           0000E4   478 _DPL1	=	0x00e4
                           0000E5   479 _DPH1	=	0x00e5
                           0000AE   480 _TA	=	0x00ae
                           000090   481 _P1	=	0x0090
                           000091   482 _P1M1	=	0x0091
                           000092   483 _P1M0	=	0x0092
                           0000A0   484 _P2	=	0x00a0
                           000095   485 _P2M1	=	0x0095
                           000096   486 _P2M0	=	0x0096
                           0000B0   487 _P3	=	0x00b0
                           0000B1   488 _P3M1	=	0x00b1
                           0000B2   489 _P3M0	=	0x00b2
                           0000C8   490 _P5	=	0x00c8
                           0000C9   491 _P5M1	=	0x00c9
                           0000CA   492 _P5M0	=	0x00ca
                           0000C2   493 _IAP_DATA	=	0x00c2
                           0000C3   494 _IAP_ADDRH	=	0x00c3
                           0000C4   495 _IAP_ADDRL	=	0x00c4
                           00C3C4   496 _IAP_ADDR	=	0xc3c4
                           0000C5   497 _IAP_CMD	=	0x00c5
                           0000C6   498 _IAP_TRIG	=	0x00c6
                           0000C7   499 _IAP_CONTR	=	0x00c7
                           0000F5   500 _IAP_TPS	=	0x00f5
                           00008F   501 _INT_CLKO	=	0x008f
                           0000A8   502 _IE1	=	0x00a8
                           0000B8   503 _IP1L	=	0x00b8
                           0000B7   504 _IP1H	=	0x00b7
                           0000AF   505 _IE2	=	0x00af
                           0000B5   506 _IP2L	=	0x00b5
                           0000B6   507 _IP2H	=	0x00b6
                           0000DF   508 _IP3L	=	0x00df
                           0000EE   509 _IP3H	=	0x00ee
                           000081   510 _SP	=	0x0081
                           0000D0   511 _PSW	=	0x00d0
                           0000E0   512 _ACC	=	0x00e0
                           0000F0   513 _B	=	0x00f0
                           000087   514 _PCON	=	0x0087
                           0000FF   515 _RSTCFG	=	0x00ff
                           0000A2   516 _P_SW1	=	0x00a2
                           0000BA   517 _P_SW2	=	0x00ba
                           0000A1   518 _BUS_SPEED	=	0x00a1
                           0000AA   519 _WKTCL	=	0x00aa
                           0000AB   520 _WKTCH	=	0x00ab
                           00ABAA   521 _WKTC	=	0xabaa
                           0000CD   522 _SPSTAT	=	0x00cd
                           0000CE   523 _SPCTL	=	0x00ce
                           0000CF   524 _SPDAT	=	0x00cf
                           00009D   525 _IRCBAND	=	0x009d
                           00009E   526 _LIRTRIM	=	0x009e
                           00009F   527 _IRTRIM	=	0x009f
                           000088   528 _TCON	=	0x0088
                           000089   529 _TMOD	=	0x0089
                           00008A   530 _T0L	=	0x008a
                           00008C   531 _T0H	=	0x008c
                           008C8A   532 _T0	=	0x8c8a
                           00008B   533 _T1L	=	0x008b
                           00008D   534 _T1H	=	0x008d
                           008D8B   535 _T1	=	0x8d8b
                           0000D7   536 _T2L	=	0x00d7
                           0000D6   537 _T2H	=	0x00d6
                           00D6D7   538 _T2	=	0xd6d7
                           00008E   539 _AUXR	=	0x008e
                           0000C1   540 _WDT_CONTR	=	0x00c1
                           0000D1   541 _T4T3M	=	0x00d1
                           0000D2   542 _T4H	=	0x00d2
                           0000D3   543 _T4L	=	0x00d3
                           00D2D3   544 _T4	=	0xd2d3
                           0000D4   545 _T3H	=	0x00d4
                           0000D5   546 _T3L	=	0x00d5
                           00D4D5   547 _T3	=	0xd4d5
                           0000EF   548 _AUXINTIF	=	0x00ef
                           0000A9   549 _SADDR	=	0x00a9
                           0000B9   550 _SADEN	=	0x00b9
                           000098   551 _S1CON	=	0x0098
                           000099   552 _S1BUF	=	0x0099
                           00009A   553 _S2CON	=	0x009a
                           00009B   554 _S2BUF	=	0x009b
                           0000AC   555 _S3CON	=	0x00ac
                           0000AD   556 _S3BUF	=	0x00ad
                           000084   557 _S4CON	=	0x0084
                           000085   558 _S4BUF	=	0x0085
                           0000DC   559 _USBCLK	=	0x00dc
                           0000EC   560 _USBDAT	=	0x00ec
                           0000F4   561 _USBCON	=	0x00f4
                           0000FC   562 _USBADR	=	0x00fc
                                    563 ;--------------------------------------------------------
                                    564 ; special function bits
                                    565 ;--------------------------------------------------------
                                    566 	.area RSEG    (ABS,DATA)
      000000                        567 	.org 0x0000
                           000090   568 _P1_0	=	0x0090
                           000091   569 _P1_1	=	0x0091
                           000092   570 _P1_2	=	0x0092
                           000093   571 _P1_3	=	0x0093
                           000094   572 _P1_4	=	0x0094
                           000095   573 _P1_5	=	0x0095
                           000096   574 _P1_6	=	0x0096
                           000097   575 _P1_7	=	0x0097
                           0000A0   576 _P2_0	=	0x00a0
                           0000A1   577 _P2_1	=	0x00a1
                           0000A2   578 _P2_2	=	0x00a2
                           0000A3   579 _P2_3	=	0x00a3
                           0000A4   580 _P2_4	=	0x00a4
                           0000A5   581 _P2_5	=	0x00a5
                           0000A6   582 _P2_6	=	0x00a6
                           0000A7   583 _P2_7	=	0x00a7
                           0000B0   584 _P3_0	=	0x00b0
                           0000B1   585 _P3_1	=	0x00b1
                           0000B2   586 _P3_2	=	0x00b2
                           0000B3   587 _P3_3	=	0x00b3
                           0000B4   588 _P3_4	=	0x00b4
                           0000B5   589 _P3_5	=	0x00b5
                           0000B6   590 _P3_6	=	0x00b6
                           0000B7   591 _P3_7	=	0x00b7
                           0000C8   592 _P5_0	=	0x00c8
                           0000C9   593 _P5_1	=	0x00c9
                           0000CA   594 _P5_2	=	0x00ca
                           0000CB   595 _P5_3	=	0x00cb
                           0000CC   596 _P5_4	=	0x00cc
                           0000CD   597 _P5_5	=	0x00cd
                           000088   598 _INT0TR	=	0x0088
                           00008A   599 _INT1TR	=	0x008a
                           0000A8   600 _INT0IE	=	0x00a8
                           0000AA   601 _INT1IE	=	0x00aa
                           0000AF   602 _EA	=	0x00af
                           0000D0   603 _P	=	0x00d0
                           0000D1   604 _F1	=	0x00d1
                           0000D2   605 _OV	=	0x00d2
                           0000D3   606 _RS0	=	0x00d3
                           0000D4   607 _RS1	=	0x00d4
                           0000D5   608 _F0	=	0x00d5
                           0000D6   609 _AC	=	0x00d6
                           0000D7   610 _CY	=	0x00d7
                           00008C   611 _T0RUN	=	0x008c
                           00008E   612 _T1RUN	=	0x008e
                           0000A9   613 _T0IE	=	0x00a9
                           0000AB   614 _T1IE	=	0x00ab
                           00009F   615 _S1SM0_FE	=	0x009f
                                    616 ;--------------------------------------------------------
                                    617 ; overlayable register banks
                                    618 ;--------------------------------------------------------
                                    619 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                        620 	.ds 8
                                    621 ;--------------------------------------------------------
                                    622 ; internal ram data
                                    623 ;--------------------------------------------------------
                                    624 	.area DSEG    (DATA)
                                    625 ;--------------------------------------------------------
                                    626 ; overlayable items in internal ram 
                                    627 ;--------------------------------------------------------
                                    628 ;--------------------------------------------------------
                                    629 ; indirectly addressable internal ram data
                                    630 ;--------------------------------------------------------
                                    631 	.area ISEG    (DATA)
                                    632 ;--------------------------------------------------------
                                    633 ; absolute internal ram data
                                    634 ;--------------------------------------------------------
                                    635 	.area IABS    (ABS,DATA)
                                    636 	.area IABS    (ABS,DATA)
                                    637 ;--------------------------------------------------------
                                    638 ; bit data
                                    639 ;--------------------------------------------------------
                                    640 	.area BSEG    (BIT)
                                    641 ;--------------------------------------------------------
                                    642 ; paged external ram data
                                    643 ;--------------------------------------------------------
                                    644 	.area PSEG    (PAG,XDATA)
                                    645 ;--------------------------------------------------------
                                    646 ; external ram data
                                    647 ;--------------------------------------------------------
                                    648 	.area XSEG    (XDATA)
                           00FEA8   649 _ADCTIM	=	0xfea8
                           00FEAD   650 _ADCEXCFG	=	0xfead
                           00FA10   651 _DMA_ADC_CFG	=	0xfa10
                           00FA11   652 _DMA_ADC_CR	=	0xfa11
                           00FA12   653 _DMA_ADC_STA	=	0xfa12
                           00FA17   654 _DMA_ADC_RXAH	=	0xfa17
                           00FA18   655 _DMA_ADC_RXAL	=	0xfa18
                           00FA19   656 _DMA_ADC_CFG2	=	0xfa19
                           00FA1A   657 _DMA_ADC_CHSW0	=	0xfa1a
                           00FA1B   658 _DMA_ADC_CHSW1	=	0xfa1b
                           00FDE0   659 _CHIP_GUID	=	0xfde0
                           00FDE7   660 ___OTHER_INFO	=	0xfde7
                           00FDEB   661 _IRTRIM_22_1184MHz	=	0xfdeb
                           00FDEC   662 _IRTRIM_24MHz	=	0xfdec
                           00FDED   663 _IRTRIM_27MHz	=	0xfded
                           00FDEE   664 _IRTRIM_30MHz	=	0xfdee
                           00FDEF   665 _IRTRIM_33_1776MHz	=	0xfdef
                           00FDF0   666 _IRTRIM_35MHz	=	0xfdf0
                           00FDF1   667 _IRTRIM_36_864MHz	=	0xfdf1
                           00FDF2   668 _IRTRIM_40MHz	=	0xfdf2
                           00FDF3   669 _IRTRIM_44_2368MHz	=	0xfdf3
                           00FDF4   670 _IRTRIM_48MHz	=	0xfdf4
                           00FDF5   671 _VRTRIM_6MHz	=	0xfdf5
                           00FDF6   672 _VRTRIM_10MHz	=	0xfdf6
                           00FDF7   673 _VRTRIM_27MHz	=	0xfdf7
                           00FDF8   674 _VRTRIM_44MHz	=	0xfdf8
                           00FDF9   675 _PROGRAM_AREA_SIZE	=	0xfdf9
                           00FDFB   676 _CHIP_TEST_YEAR_BCD	=	0xfdfb
                           00FDFC   677 _CHIP_TEST_MONTH_BCD	=	0xfdfc
                           00FDFD   678 _CHIP_TEST_DAY_BCD	=	0xfdfd
                           00FDFE   679 _CHIP_PACKAGE_TYPE	=	0xfdfe
                           00FEAE   680 _CMPEXCFG	=	0xfeae
                           00FA00   681 _DMA_M2M_CFG	=	0xfa00
                           00FA01   682 _DMA_M2M_CR	=	0xfa01
                           00FA02   683 _DMA_M2M_STA	=	0xfa02
                           00FA03   684 _DMA_M2M_AMT	=	0xfa03
                           00FA04   685 _DMA_M2M_DONE	=	0xfa04
                           00FA05   686 _DMA_M2M_TXAH	=	0xfa05
                           00FA06   687 _DMA_M2M_TXAL	=	0xfa06
                           00FA07   688 _DMA_M2M_RXAH	=	0xfa07
                           00FA08   689 _DMA_M2M_RXAL	=	0xfa08
                           00FD01   690 _P1INTE	=	0xfd01
                           00FD11   691 _P1INTF	=	0xfd11
                           00FD21   692 _P1IM0	=	0xfd21
                           00FD31   693 _P1IM1	=	0xfd31
                           00FD41   694 _P1WKUE	=	0xfd41
                           00FE11   695 _P1PU	=	0xfe11
                           00FE19   696 _P1NCS	=	0xfe19
                           00FE21   697 _P1SR	=	0xfe21
                           00FE29   698 _P1DR	=	0xfe29
                           00FE31   699 _P1IE	=	0xfe31
                           00FD02   700 _P2INTE	=	0xfd02
                           00FD12   701 _P2INTF	=	0xfd12
                           00FD22   702 _P2IM0	=	0xfd22
                           00FD32   703 _P2IM1	=	0xfd32
                           00FD42   704 _P2WKUE	=	0xfd42
                           00FE12   705 _P2PU	=	0xfe12
                           00FE1A   706 _P2NCS	=	0xfe1a
                           00FE22   707 _P2SR	=	0xfe22
                           00FE2A   708 _P2DR	=	0xfe2a
                           00FE32   709 _P2IE	=	0xfe32
                           00FD03   710 _P3INTE	=	0xfd03
                           00FD13   711 _P3INTF	=	0xfd13
                           00FD23   712 _P3IM0	=	0xfd23
                           00FD33   713 _P3IM1	=	0xfd33
                           00FD43   714 _P3WKUE	=	0xfd43
                           00FE13   715 _P3PU	=	0xfe13
                           00FE1B   716 _P3NCS	=	0xfe1b
                           00FE23   717 _P3SR	=	0xfe23
                           00FE2B   718 _P3DR	=	0xfe2b
                           00FE33   719 _P3IE	=	0xfe33
                           00FD05   720 _P5INTE	=	0xfd05
                           00FD15   721 _P5INTF	=	0xfd15
                           00FD25   722 _P5IM0	=	0xfd25
                           00FD35   723 _P5IM1	=	0xfd35
                           00FD45   724 _P5WKUE	=	0xfd45
                           00FE15   725 _P5PU	=	0xfe15
                           00FE1D   726 _P5NCS	=	0xfe1d
                           00FE25   727 _P5SR	=	0xfe25
                           00FE2D   728 _P5DR	=	0xfe2d
                           00FE35   729 _P5IE	=	0xfe35
                           00FD60   730 _PINIPL	=	0xfd60
                           00FD61   731 _PINIPH	=	0xfd61
                           00FE80   732 _I2CCFG	=	0xfe80
                           00FE81   733 _I2CMSCR	=	0xfe81
                           00FE82   734 _I2CMSST	=	0xfe82
                           00FE83   735 _I2CSLCR	=	0xfe83
                           00FE84   736 _I2CSLST	=	0xfe84
                           00FE85   737 _I2CSLADR	=	0xfe85
                           00FE86   738 _I2CTXD	=	0xfe86
                           00FE87   739 _I2CRXD	=	0xfe87
                           00FE88   740 _I2CMSAUX	=	0xfe88
                           00FE50   741 _LCMCFG	=	0xfe50
                           00FE51   742 _LCMCFG2	=	0xfe51
                           00FE52   743 _LCMCR	=	0xfe52
                           00FE53   744 _LCMSTA	=	0xfe53
                           00FE54   745 _LCMIDDATL	=	0xfe54
                           00FE55   746 _LCMIDDATH	=	0xfe55
                           00FE54   747 _LCMIDDAT	=	0xfe54
                           00FA70   748 _DMA_LCM_CFG	=	0xfa70
                           00FA71   749 _DMA_LCM_CR	=	0xfa71
                           00FA72   750 _DMA_LCM_STA	=	0xfa72
                           00FA73   751 _DMA_LCM_AMT	=	0xfa73
                           00FA74   752 _DMA_LCM_DONE	=	0xfa74
                           00FA75   753 _DMA_LCM_TXAH	=	0xfa75
                           00FA76   754 _DMA_LCM_TXAL	=	0xfa76
                           00FA77   755 _DMA_LCM_RXAH	=	0xfa77
                           00FA78   756 _DMA_LCM_RXAL	=	0xfa78
                           00FCF0   757 _MD3	=	0xfcf0
                           00FCF1   758 _MD2	=	0xfcf1
                           00FCF2   759 _MD1	=	0xfcf2
                           00FCF3   760 _MD0	=	0xfcf3
                           00FCF4   761 _MD5	=	0xfcf4
                           00FCF5   762 _MD4	=	0xfcf5
                           00FCF6   763 _ARCON	=	0xfcf6
                           00FCF7   764 _OPCON	=	0xfcf7
                           00FE08   765 _SPFUNC	=	0xfe08
                           00FE09   766 _RSTFLAG	=	0xfe09
                           00FEB0   767 _PWMA_ETRPS	=	0xfeb0
                           00FEB1   768 _PWMA_ENO	=	0xfeb1
                           00FEB2   769 _PWMA_PS	=	0xfeb2
                           00FEB3   770 _PWMA_IOAUX	=	0xfeb3
                           00FEB4   771 _PWMB_ETRPS	=	0xfeb4
                           00FEB5   772 _PWMB_ENO	=	0xfeb5
                           00FEB6   773 _PWMB_PS	=	0xfeb6
                           00FEB7   774 _PWMB_IOAUX	=	0xfeb7
                           00FEC0   775 _PWMA_CR1	=	0xfec0
                           00FEC1   776 _PWMA_CR2	=	0xfec1
                           00FEC2   777 _PWMA_SMCR	=	0xfec2
                           00FEC3   778 _PWMA_ETR	=	0xfec3
                           00FEC4   779 _PWMA_IER	=	0xfec4
                           00FEC5   780 _PWMA_SR1	=	0xfec5
                           00FEC6   781 _PWMA_SR2	=	0xfec6
                           00FEC7   782 _PWMA_EGR	=	0xfec7
                           00FEC8   783 _PWMA_CCMR1	=	0xfec8
                           00FEC9   784 _PWMA_CCMR2	=	0xfec9
                           00FECA   785 _PWMA_CCMR3	=	0xfeca
                           00FECB   786 _PWMA_CCMR4	=	0xfecb
                           00FECC   787 _PWMA_CCER1	=	0xfecc
                           00FECD   788 _PWMA_CCER2	=	0xfecd
                           00FECE   789 _PWMA_CNTRH	=	0xfece
                           00FECF   790 _PWMA_CNTRL	=	0xfecf
                           00FED0   791 _PWMA_PSCRH	=	0xfed0
                           00FED1   792 _PWMA_PSCRL	=	0xfed1
                           00FED2   793 _PWMA_ARRH	=	0xfed2
                           00FED3   794 _PWMA_ARRL	=	0xfed3
                           00FED4   795 _PWMA_RCR	=	0xfed4
                           00FED5   796 _PWMA_CCR1H	=	0xfed5
                           00FED6   797 _PWMA_CCR1L	=	0xfed6
                           00FED7   798 _PWMA_CCR2H	=	0xfed7
                           00FED8   799 _PWMA_CCR2L	=	0xfed8
                           00FED9   800 _PWMA_CCR3H	=	0xfed9
                           00FEDA   801 _PWMA_CCR3L	=	0xfeda
                           00FEDB   802 _PWMA_CCR4H	=	0xfedb
                           00FEDC   803 _PWMA_CCR4L	=	0xfedc
                           00FEDD   804 _PWMA_BKR	=	0xfedd
                           00FEDE   805 _PWMA_DTR	=	0xfede
                           00FEDF   806 _PWMA_OISR	=	0xfedf
                           00FEE0   807 _PWMB_CR1	=	0xfee0
                           00FEE1   808 _PWMB_CR2	=	0xfee1
                           00FEE2   809 _PWMB_SMCR	=	0xfee2
                           00FEE3   810 _PWMB_ETR	=	0xfee3
                           00FEE4   811 _PWMB_IER	=	0xfee4
                           00FEE5   812 _PWMB_SR1	=	0xfee5
                           00FEE6   813 _PWMB_SR2	=	0xfee6
                           00FEE7   814 _PWMB_EGR	=	0xfee7
                           00FEE8   815 _PWMB_CCMR1	=	0xfee8
                           00FEE9   816 _PWMB_CCMR2	=	0xfee9
                           00FEEA   817 _PWMB_CCMR3	=	0xfeea
                           00FEEB   818 _PWMB_CCMR4	=	0xfeeb
                           00FEEC   819 _PWMB_CCER1	=	0xfeec
                           00FEED   820 _PWMB_CCER2	=	0xfeed
                           00FEEE   821 _PWMB_CNTRH	=	0xfeee
                           00FEEF   822 _PWMB_CNTRL	=	0xfeef
                           00FEF0   823 _PWMB_PSCRH	=	0xfef0
                           00FEF1   824 _PWMB_PSCRL	=	0xfef1
                           00FEF2   825 _PWMB_ARRH	=	0xfef2
                           00FEF3   826 _PWMB_ARRL	=	0xfef3
                           00FEF4   827 _PWMB_RCR	=	0xfef4
                           00FEF5   828 _PWMB_CCR1H	=	0xfef5
                           00FEF6   829 _PWMB_CCR1L	=	0xfef6
                           00FEF7   830 _PWMB_CCR2H	=	0xfef7
                           00FEF8   831 _PWMB_CCR2L	=	0xfef8
                           00FEF9   832 _PWMB_CCR3H	=	0xfef9
                           00FEFA   833 _PWMB_CCR3L	=	0xfefa
                           00FEFB   834 _PWMB_CCR4H	=	0xfefb
                           00FEFC   835 _PWMB_CCR4L	=	0xfefc
                           00FEFD   836 _PWMB_BKR	=	0xfefd
                           00FEFE   837 _PWMB_DTR	=	0xfefe
                           00FEFF   838 _PWMB_OISR	=	0xfeff
                           00FE60   839 _RTCCR	=	0xfe60
                           00FE61   840 _RTCCFG	=	0xfe61
                           00FE62   841 _RTCIEN	=	0xfe62
                           00FE63   842 _RTCIF	=	0xfe63
                           00FE64   843 _ALAHOUR	=	0xfe64
                           00FE65   844 _ALAMIN	=	0xfe65
                           00FE66   845 _ALASEC	=	0xfe66
                           00FE67   846 _ALASSEC	=	0xfe67
                           00FE68   847 _INIYEAR	=	0xfe68
                           00FE69   848 _INIMONTH	=	0xfe69
                           00FE6A   849 _INIDAY	=	0xfe6a
                           00FE6B   850 _INIHOUR	=	0xfe6b
                           00FE6C   851 _INIMIN	=	0xfe6c
                           00FE6D   852 _INISEC	=	0xfe6d
                           00FE6E   853 _INISSEC	=	0xfe6e
                           00FE70   854 _YEAR	=	0xfe70
                           00FE71   855 _MONTH	=	0xfe71
                           00FE72   856 _DAY	=	0xfe72
                           00FE73   857 _HOUR	=	0xfe73
                           00FE74   858 _MIN	=	0xfe74
                           00FE75   859 _SEC	=	0xfe75
                           00FE76   860 _SSEC	=	0xfe76
                           00FA20   861 _DMA_SPI_CFG	=	0xfa20
                           00FA21   862 _DMA_SPI_CR	=	0xfa21
                           00FA22   863 _DMA_SPI_STA	=	0xfa22
                           00FA23   864 _DMA_SPI_AMT	=	0xfa23
                           00FA24   865 _DMA_SPI_DONE	=	0xfa24
                           00FA25   866 _DMA_SPI_TXAH	=	0xfa25
                           00FA26   867 _DMA_SPI_TXAL	=	0xfa26
                           00FA27   868 _DMA_SPI_RXAH	=	0xfa27
                           00FA28   869 _DMA_SPI_RXAL	=	0xfa28
                           00FA29   870 _DMA_SPI_CFG2	=	0xfa29
                           00FE01   871 _CLKDIV	=	0xfe01
                           00FE02   872 _HIRCCR	=	0xfe02
                           00FE03   873 _XOSCCR	=	0xfe03
                           00FE08   874 _X32KCR	=	0xfe08
                           00FE04   875 _IRC32KCR	=	0xfe04
                           00FE00   876 _CKSEL	=	0xfe00
                           00FE05   877 _MCLKOCR	=	0xfe05
                           00FE06   878 _IRCDB	=	0xfe06
                           00FE07   879 _IRC48MCR	=	0xfe07
                           00FEA2   880 _TM2PS	=	0xfea2
                           00FEA3   881 _TM3PS	=	0xfea3
                           00FEA4   882 _TM4PS	=	0xfea4
                           00FA30   883 _DMA_UR1T_CFG	=	0xfa30
                           00FA31   884 _DMA_UR1T_CR	=	0xfa31
                           00FA32   885 _DMA_UR1T_STA	=	0xfa32
                           00FA33   886 _DMA_URTX_AMT	=	0xfa33
                           00FA34   887 _DMA_UR1T_DONE	=	0xfa34
                           00FA35   888 _DMA_UR1T_TXAH	=	0xfa35
                           00FA36   889 _DMA_UR1T_TXAL	=	0xfa36
                           00FA38   890 _DMA_UR1R_CFG	=	0xfa38
                           00FA39   891 _DMA_UR1R_CR	=	0xfa39
                           00FA3A   892 _DMA_UR1R_STA	=	0xfa3a
                           00FA3B   893 _DMA_UR1R_AMT	=	0xfa3b
                           00FA3C   894 _DMA_UR1R_DONE	=	0xfa3c
                           00FA3D   895 _DMA_UR1R_TXAH	=	0xfa3d
                           00FA3E   896 _DMA_UR1R_TXAL	=	0xfa3e
                           00FA30   897 _DMA_UR2T_CFG	=	0xfa30
                           00FA31   898 _DMA_UR2T_CR	=	0xfa31
                           00FA32   899 _DMA_UR2T_STA	=	0xfa32
                           00FA33   900 _DMA_UR2T_AMT	=	0xfa33
                           00FA34   901 _DMA_UR2T_DONE	=	0xfa34
                           00FA35   902 _DMA_UR2T_TXAH	=	0xfa35
                           00FA36   903 _DMA_UR2T_TXAL	=	0xfa36
                           00FA38   904 _DMA_UR2R_CFG	=	0xfa38
                           00FA39   905 _DMA_UR2R_CR	=	0xfa39
                           00FA3A   906 _DMA_UR2R_STA	=	0xfa3a
                           00FA3B   907 _DMA_UR2R_AMT	=	0xfa3b
                           00FA3C   908 _DMA_UR2R_DONE	=	0xfa3c
                           00FA3D   909 _DMA_UR2R_TXAH	=	0xfa3d
                           00FA3E   910 _DMA_UR2R_TXAL	=	0xfa3e
                           00FA30   911 _DMA_UR3T_CFG	=	0xfa30
                           00FA31   912 _DMA_UR3T_CR	=	0xfa31
                           00FA32   913 _DMA_UR3T_STA	=	0xfa32
                           00FA33   914 _DMA_UR3T_AMT	=	0xfa33
                           00FA34   915 _DMA_UR3T_DONE	=	0xfa34
                           00FA35   916 _DMA_UR3T_TXAH	=	0xfa35
                           00FA36   917 _DMA_UR3T_TXAL	=	0xfa36
                           00FA38   918 _DMA_UR3R_CFG	=	0xfa38
                           00FA39   919 _DMA_UR3R_CR	=	0xfa39
                           00FA3A   920 _DMA_UR3R_STA	=	0xfa3a
                           00FA3B   921 _DMA_UR3R_AMT	=	0xfa3b
                           00FA3C   922 _DMA_UR3R_DONE	=	0xfa3c
                           00FA3D   923 _DMA_UR3R_TXAH	=	0xfa3d
                           00FA3E   924 _DMA_UR3R_TXAL	=	0xfa3e
                           00FA30   925 _DMA_UR4T_CFG	=	0xfa30
                           00FA31   926 _DMA_UR4T_CR	=	0xfa31
                           00FA32   927 _DMA_UR4T_STA	=	0xfa32
                           00FA33   928 _DMA_UR4T_AMT	=	0xfa33
                           00FA34   929 _DMA_UR4T_DONE	=	0xfa34
                           00FA35   930 _DMA_UR4T_TXAH	=	0xfa35
                           00FA36   931 _DMA_UR4T_TXAL	=	0xfa36
                           00FA38   932 _DMA_UR4R_CFG	=	0xfa38
                           00FA39   933 _DMA_UR4R_CR	=	0xfa39
                           00FA3A   934 _DMA_UR4R_STA	=	0xfa3a
                           00FA3B   935 _DMA_UR4R_AMT	=	0xfa3b
                           00FA3C   936 _DMA_UR4R_DONE	=	0xfa3c
                           00FA3D   937 _DMA_UR4R_TXAH	=	0xfa3d
                           00FA3E   938 _DMA_UR4R_TXAL	=	0xfa3e
      000000                        939 _uartGetCharacter_result_65536_69:
      000000                        940 	.ds 1
      000001                        941 _led_timer_count:
      000001                        942 	.ds 4
      000005                        943 _uint8_strlen_str_65536_131:
      000005                        944 	.ds 3
      000008                        945 __buffer:
      000008                        946 	.ds 81
                                    947 ;--------------------------------------------------------
                                    948 ; absolute external ram data
                                    949 ;--------------------------------------------------------
                                    950 	.area XABS    (ABS,XDATA)
                                    951 ;--------------------------------------------------------
                                    952 ; external initialized ram data
                                    953 ;--------------------------------------------------------
                                    954 	.area XISEG   (XDATA)
      000000                        955 _led_pin:
      000000                        956 	.ds 13
                                    957 	.area HOME    (CODE)
                                    958 	.area GSINIT0 (CODE)
                                    959 	.area GSINIT1 (CODE)
                                    960 	.area GSINIT2 (CODE)
                                    961 	.area GSINIT3 (CODE)
                                    962 	.area GSINIT4 (CODE)
                                    963 	.area GSINIT5 (CODE)
                                    964 	.area GSINIT  (CODE)
                                    965 	.area GSFINAL (CODE)
                                    966 	.area CSEG    (CODE)
                                    967 ;--------------------------------------------------------
                                    968 ; global & static initialisations
                                    969 ;--------------------------------------------------------
                                    970 	.area HOME    (CODE)
                                    971 	.area GSINIT  (CODE)
                                    972 	.area GSFINAL (CODE)
                                    973 	.area GSINIT  (CODE)
                                    974 ;--------------------------------------------------------
                                    975 ; Home
                                    976 ;--------------------------------------------------------
                                    977 	.area HOME    (CODE)
                                    978 	.area HOME    (CODE)
                                    979 ;--------------------------------------------------------
                                    980 ; code
                                    981 ;--------------------------------------------------------
                                    982 	.area CSEG    (CODE)
                                    983 ;------------------------------------------------------------
                                    984 ;Allocation info for local variables in function 'uint8_strlen'
                                    985 ;------------------------------------------------------------
                                    986 ;str                       Allocated with name '_uint8_strlen_str_65536_131'
                                    987 ;length                    Allocated with name '_uint8_strlen_length_65536_132'
                                    988 ;------------------------------------------------------------
                                    989 ;	report.c:6: size_t uint8_strlen(const uint8_t *str) {
                                    990 ;	-----------------------------------------
                                    991 ;	 function uint8_strlen
                                    992 ;	-----------------------------------------
      000000                        993 _uint8_strlen:
                           000007   994 	ar7 = 0x07
                           000006   995 	ar6 = 0x06
                           000005   996 	ar5 = 0x05
                           000004   997 	ar4 = 0x04
                           000003   998 	ar3 = 0x03
                           000002   999 	ar2 = 0x02
                           000001  1000 	ar1 = 0x01
                           000000  1001 	ar0 = 0x00
      000000 AF F0            [24] 1002 	mov	r7,b
      000002 AE 83            [24] 1003 	mov	r6,dph
      000004 E5 82            [12] 1004 	mov	a,dpl
      000006 90r00r05         [24] 1005 	mov	dptr,#_uint8_strlen_str_65536_131
      000009 F0               [24] 1006 	movx	@dptr,a
      00000A EE               [12] 1007 	mov	a,r6
      00000B A3               [24] 1008 	inc	dptr
      00000C F0               [24] 1009 	movx	@dptr,a
      00000D EF               [12] 1010 	mov	a,r7
      00000E A3               [24] 1011 	inc	dptr
      00000F F0               [24] 1012 	movx	@dptr,a
                                   1013 ;	report.c:8: while (str[length] != '\0') { // Check for the null terminator
      000010 90r00r05         [24] 1014 	mov	dptr,#_uint8_strlen_str_65536_131
      000013 E0               [24] 1015 	movx	a,@dptr
      000014 FD               [12] 1016 	mov	r5,a
      000015 A3               [24] 1017 	inc	dptr
      000016 E0               [24] 1018 	movx	a,@dptr
      000017 FE               [12] 1019 	mov	r6,a
      000018 A3               [24] 1020 	inc	dptr
      000019 E0               [24] 1021 	movx	a,@dptr
      00001A FF               [12] 1022 	mov	r7,a
      00001B 7B 00            [12] 1023 	mov	r3,#0x00
      00001D 7C 00            [12] 1024 	mov	r4,#0x00
      00001F                       1025 00101$:
      00001F EB               [12] 1026 	mov	a,r3
      000020 2D               [12] 1027 	add	a,r5
      000021 F8               [12] 1028 	mov	r0,a
      000022 EC               [12] 1029 	mov	a,r4
      000023 3E               [12] 1030 	addc	a,r6
      000024 F9               [12] 1031 	mov	r1,a
      000025 8F 02            [24] 1032 	mov	ar2,r7
      000027 88 82            [24] 1033 	mov	dpl,r0
      000029 89 83            [24] 1034 	mov	dph,r1
      00002B 8A F0            [24] 1035 	mov	b,r2
      00002D 12r00r00         [24] 1036 	lcall	__gptrget
      000030 60 07            [24] 1037 	jz	00103$
                                   1038 ;	report.c:9: length++;
      000032 0B               [12] 1039 	inc	r3
      000033 BB 00 E9         [24] 1040 	cjne	r3,#0x00,00101$
      000036 0C               [12] 1041 	inc	r4
      000037 80 E6            [24] 1042 	sjmp	00101$
      000039                       1043 00103$:
                                   1044 ;	report.c:11: return length;
      000039 8B 82            [24] 1045 	mov	dpl,r3
      00003B 8C 83            [24] 1046 	mov	dph,r4
                                   1047 ;	report.c:12: }
      00003D 22               [24] 1048 	ret
                                   1049 ;------------------------------------------------------------
                                   1050 ;Allocation info for local variables in function 'report_init'
                                   1051 ;------------------------------------------------------------
                                   1052 ;	report.c:14: void report_init(void) {
                                   1053 ;	-----------------------------------------
                                   1054 ;	 function report_init
                                   1055 ;	-----------------------------------------
      00003E                       1056 _report_init:
                                   1057 ;	report.c:16: gpioConfigure(&led_pin);
      00003E 90r00r00         [24] 1058 	mov	dptr,#_led_pin
      000041 75 F0 00         [24] 1059 	mov	b,#0x00
      000044 12r00r00         [24] 1060 	lcall	_gpioConfigure
                                   1061 ;	report.c:17: led_timer_count = get_current_time();
      000047 12r00r00         [24] 1062 	lcall	_get_current_time
      00004A AC 82            [24] 1063 	mov	r4,dpl
      00004C AD 83            [24] 1064 	mov	r5,dph
      00004E AE F0            [24] 1065 	mov	r6,b
      000050 FF               [12] 1066 	mov	r7,a
      000051 90r00r01         [24] 1067 	mov	dptr,#_led_timer_count
      000054 EC               [12] 1068 	mov	a,r4
      000055 F0               [24] 1069 	movx	@dptr,a
      000056 ED               [12] 1070 	mov	a,r5
      000057 A3               [24] 1071 	inc	dptr
      000058 F0               [24] 1072 	movx	@dptr,a
      000059 EE               [12] 1073 	mov	a,r6
      00005A A3               [24] 1074 	inc	dptr
      00005B F0               [24] 1075 	movx	@dptr,a
      00005C EF               [12] 1076 	mov	a,r7
      00005D A3               [24] 1077 	inc	dptr
      00005E F0               [24] 1078 	movx	@dptr,a
                                   1079 ;	report.c:19: }
      00005F 22               [24] 1080 	ret
                                   1081 ;------------------------------------------------------------
                                   1082 ;Allocation info for local variables in function 'report_toggle_led'
                                   1083 ;------------------------------------------------------------
                                   1084 ;__1966080008              Allocated with name '_report_toggle_led___1966080008_196608_139'
                                   1085 ;config                    Allocated with name '_report_toggle_led_config_262144_140'
                                   1086 ;------------------------------------------------------------
                                   1087 ;	report.c:21: void report_toggle_led(void) {
                                   1088 ;	-----------------------------------------
                                   1089 ;	 function report_toggle_led
                                   1090 ;	-----------------------------------------
      000060                       1091 _report_toggle_led:
                                   1092 ;	report.c:22: if ((get_current_time() - led_timer_count) >= LED_BLINK_PERIOD) {
      000060 12r00r00         [24] 1093 	lcall	_get_current_time
      000063 AC 82            [24] 1094 	mov	r4,dpl
      000065 AD 83            [24] 1095 	mov	r5,dph
      000067 AE F0            [24] 1096 	mov	r6,b
      000069 FF               [12] 1097 	mov	r7,a
      00006A 90r00r01         [24] 1098 	mov	dptr,#_led_timer_count
      00006D E0               [24] 1099 	movx	a,@dptr
      00006E F8               [12] 1100 	mov	r0,a
      00006F A3               [24] 1101 	inc	dptr
      000070 E0               [24] 1102 	movx	a,@dptr
      000071 F9               [12] 1103 	mov	r1,a
      000072 A3               [24] 1104 	inc	dptr
      000073 E0               [24] 1105 	movx	a,@dptr
      000074 FA               [12] 1106 	mov	r2,a
      000075 A3               [24] 1107 	inc	dptr
      000076 E0               [24] 1108 	movx	a,@dptr
      000077 FB               [12] 1109 	mov	r3,a
      000078 EC               [12] 1110 	mov	a,r4
      000079 C3               [12] 1111 	clr	c
      00007A 98               [12] 1112 	subb	a,r0
      00007B FC               [12] 1113 	mov	r4,a
      00007C ED               [12] 1114 	mov	a,r5
      00007D 99               [12] 1115 	subb	a,r1
      00007E FD               [12] 1116 	mov	r5,a
      00007F EE               [12] 1117 	mov	a,r6
      000080 9A               [12] 1118 	subb	a,r2
      000081 FE               [12] 1119 	mov	r6,a
      000082 EF               [12] 1120 	mov	a,r7
      000083 9B               [12] 1121 	subb	a,r3
      000084 FF               [12] 1122 	mov	r7,a
      000085 C3               [12] 1123 	clr	c
      000086 EC               [12] 1124 	mov	a,r4
      000087 94 90            [12] 1125 	subb	a,#0x90
      000089 ED               [12] 1126 	mov	a,r5
      00008A 94 01            [12] 1127 	subb	a,#0x01
      00008C EE               [12] 1128 	mov	a,r6
      00008D 94 00            [12] 1129 	subb	a,#0x00
      00008F EF               [12] 1130 	mov	a,r7
      000090 94 00            [12] 1131 	subb	a,#0x00
      000092 40 35            [24] 1132 	jc	00104$
                                   1133 ;	report.c:24: gpioToggle(&led_pin);
                                   1134 ;	/home/mr-a-717/.stc/uni-stc/hal/gpio-hal.h:206: gpioWrite(config, !gpioRead(config));
      000094 90r00r00         [24] 1135 	mov	dptr,#_led_pin
      000097 75 F0 00         [24] 1136 	mov	b,#0x00
      00009A 12r00r00         [24] 1137 	lcall	_gpioRead
      00009D E5 82            [12] 1138 	mov	a,dpl
      00009F B4 01 00         [24] 1139 	cjne	a,#0x01,00111$
      0000A2                       1140 00111$:
      0000A2 E4               [12] 1141 	clr	a
      0000A3 33               [12] 1142 	rlc	a
      0000A4 90r00r00         [24] 1143 	mov	dptr,#_gpioWrite_PARM_2
      0000A7 F0               [24] 1144 	movx	@dptr,a
      0000A8 90r00r00         [24] 1145 	mov	dptr,#_led_pin
      0000AB 75 F0 00         [24] 1146 	mov	b,#0x00
      0000AE 12r00r00         [24] 1147 	lcall	_gpioWrite
                                   1148 ;	report.c:25: led_timer_count = get_current_time();                          
      0000B1 12r00r00         [24] 1149 	lcall	_get_current_time
      0000B4 AC 82            [24] 1150 	mov	r4,dpl
      0000B6 AD 83            [24] 1151 	mov	r5,dph
      0000B8 AE F0            [24] 1152 	mov	r6,b
      0000BA FF               [12] 1153 	mov	r7,a
      0000BB 90r00r01         [24] 1154 	mov	dptr,#_led_timer_count
      0000BE EC               [12] 1155 	mov	a,r4
      0000BF F0               [24] 1156 	movx	@dptr,a
      0000C0 ED               [12] 1157 	mov	a,r5
      0000C1 A3               [24] 1158 	inc	dptr
      0000C2 F0               [24] 1159 	movx	@dptr,a
      0000C3 EE               [12] 1160 	mov	a,r6
      0000C4 A3               [24] 1161 	inc	dptr
      0000C5 F0               [24] 1162 	movx	@dptr,a
      0000C6 EF               [12] 1163 	mov	a,r7
      0000C7 A3               [24] 1164 	inc	dptr
      0000C8 F0               [24] 1165 	movx	@dptr,a
      0000C9                       1166 00104$:
                                   1167 ;	report.c:28: }
      0000C9 22               [24] 1168 	ret
                                   1169 ;------------------------------------------------------------
                                   1170 ;Allocation info for local variables in function 'report'
                                   1171 ;------------------------------------------------------------
                                   1172 ;__fmt                     Allocated to stack - _bp -5
                                   1173 ;vaList                    Allocated to registers r7 
                                   1174 ;------------------------------------------------------------
                                   1175 ;	report.c:31: void report(const char* __fmt, ...) {
                                   1176 ;	-----------------------------------------
                                   1177 ;	 function report
                                   1178 ;	-----------------------------------------
      0000CA                       1179 _report:
      0000CA C0*00            [24] 1180 	push	_bp
                                   1181 ;	report.c:35: va_start(vaList, __fmt);
      0000CC E5 81            [12] 1182 	mov	a,sp
      0000CE F5*00            [12] 1183 	mov	_bp,a
      0000D0 24 FB            [12] 1184 	add	a,#0xfb
      0000D2 FF               [12] 1185 	mov	r7,a
                                   1186 ;	report.c:36: vsprintf(_buffer, __fmt, vaList);
      0000D3 E5*00            [12] 1187 	mov	a,_bp
      0000D5 24 FB            [12] 1188 	add	a,#0xfb
      0000D7 F8               [12] 1189 	mov	r0,a
      0000D8 90r00r00         [24] 1190 	mov	dptr,#_vsprintf_PARM_2
      0000DB E6               [12] 1191 	mov	a,@r0
      0000DC F0               [24] 1192 	movx	@dptr,a
      0000DD 08               [12] 1193 	inc	r0
      0000DE E6               [12] 1194 	mov	a,@r0
      0000DF A3               [24] 1195 	inc	dptr
      0000E0 F0               [24] 1196 	movx	@dptr,a
      0000E1 08               [12] 1197 	inc	r0
      0000E2 E6               [12] 1198 	mov	a,@r0
      0000E3 A3               [24] 1199 	inc	dptr
      0000E4 F0               [24] 1200 	movx	@dptr,a
      0000E5 90r00r00         [24] 1201 	mov	dptr,#_vsprintf_PARM_3
      0000E8 EF               [12] 1202 	mov	a,r7
      0000E9 F0               [24] 1203 	movx	@dptr,a
      0000EA 90r00r08         [24] 1204 	mov	dptr,#__buffer
      0000ED 75 F0 00         [24] 1205 	mov	b,#0x00
      0000F0 12r00r00         [24] 1206 	lcall	_vsprintf
                                   1207 ;	report.c:40: nrf24_device(TRANSMITTER, RESET);
      0000F3 90r00r00         [24] 1208 	mov	dptr,#_nrf24_device_PARM_2
      0000F6 74 01            [12] 1209 	mov	a,#0x01
      0000F8 F0               [24] 1210 	movx	@dptr,a
      0000F9 75 82 00         [24] 1211 	mov	dpl,#0x00
      0000FC 12r00r00         [24] 1212 	lcall	_nrf24_device
                                   1213 ;	report.c:41: nrf24_CE(0);
      0000FF 75 82 00         [24] 1214 	mov	dpl,#0x00
      000102 12r00r00         [24] 1215 	lcall	_nrf24_CE
                                   1216 ;	report.c:43: while(nrf24_transmit("testtesttesttest", 16, ACK_MODE) == TRANSMIT_FAIL) { printf("nrf24 failed to send!"); }
      000105                       1217 00101$:
      000105 90r00r00         [24] 1218 	mov	dptr,#_nrf24_transmit_PARM_2
      000108 74 10            [12] 1219 	mov	a,#0x10
      00010A F0               [24] 1220 	movx	@dptr,a
      00010B 90r00r00         [24] 1221 	mov	dptr,#_nrf24_transmit_PARM_3
      00010E E4               [12] 1222 	clr	a
      00010F F0               [24] 1223 	movx	@dptr,a
      000110 90r00r00         [24] 1224 	mov	dptr,#___str_0
      000113 75 F0 80         [24] 1225 	mov	b,#0x80
      000116 12r00r00         [24] 1226 	lcall	_nrf24_transmit
      000119 E5 82            [12] 1227 	mov	a,dpl
      00011B 70 17            [24] 1228 	jnz	00103$
      00011D 74r11            [12] 1229 	mov	a,#___str_1
      00011F C0 E0            [24] 1230 	push	acc
      000121 74s00            [12] 1231 	mov	a,#(___str_1 >> 8)
      000123 C0 E0            [24] 1232 	push	acc
      000125 74 80            [12] 1233 	mov	a,#0x80
      000127 C0 E0            [24] 1234 	push	acc
      000129 12r00r00         [24] 1235 	lcall	_printf
      00012C 15 81            [12] 1236 	dec	sp
      00012E 15 81            [12] 1237 	dec	sp
      000130 15 81            [12] 1238 	dec	sp
      000132 80 D1            [24] 1239 	sjmp	00101$
      000134                       1240 00103$:
                                   1241 ;	report.c:45: nrf24_CE(1);
      000134 75 82 01         [24] 1242 	mov	dpl,#0x01
      000137 12r00r00         [24] 1243 	lcall	_nrf24_CE
                                   1244 ;	report.c:46: delay10us(2); //TODO: remove this
      00013A 75 82 02         [24] 1245 	mov	dpl,#0x02
      00013D 12r00r00         [24] 1246 	lcall	_delay10us
                                   1247 ;	report.c:48: while(nrf24_transmit_status() == TRANSMIT_IN_PROGRESS) {printf(".");}
      000140                       1248 00104$:
      000140 12r00r00         [24] 1249 	lcall	_nrf24_transmit_status
      000143 E5 82            [12] 1250 	mov	a,dpl
      000145 70 17            [24] 1251 	jnz	00106$
      000147 74r27            [12] 1252 	mov	a,#___str_2
      000149 C0 E0            [24] 1253 	push	acc
      00014B 74s00            [12] 1254 	mov	a,#(___str_2 >> 8)
      00014D C0 E0            [24] 1255 	push	acc
      00014F 74 80            [12] 1256 	mov	a,#0x80
      000151 C0 E0            [24] 1257 	push	acc
      000153 12r00r00         [24] 1258 	lcall	_printf
      000156 15 81            [12] 1259 	dec	sp
      000158 15 81            [12] 1260 	dec	sp
      00015A 15 81            [12] 1261 	dec	sp
      00015C 80 E2            [24] 1262 	sjmp	00104$
      00015E                       1263 00106$:
                                   1264 ;	report.c:50: nrf24_CE(0);
      00015E 75 82 00         [24] 1265 	mov	dpl,#0x00
      000161 12r00r00         [24] 1266 	lcall	_nrf24_CE
                                   1267 ;	report.c:52: printf("\n");
      000164 74r29            [12] 1268 	mov	a,#___str_3
      000166 C0 E0            [24] 1269 	push	acc
      000168 74s00            [12] 1270 	mov	a,#(___str_3 >> 8)
      00016A C0 E0            [24] 1271 	push	acc
      00016C 74 80            [12] 1272 	mov	a,#0x80
      00016E C0 E0            [24] 1273 	push	acc
      000170 12r00r00         [24] 1274 	lcall	_printf
      000173 15 81            [12] 1275 	dec	sp
      000175 15 81            [12] 1276 	dec	sp
      000177 15 81            [12] 1277 	dec	sp
                                   1278 ;	report.c:53: nrf24_device(RECEIVER, RESET);
      000179 90r00r00         [24] 1279 	mov	dptr,#_nrf24_device_PARM_2
      00017C 74 01            [12] 1280 	mov	a,#0x01
      00017E F0               [24] 1281 	movx	@dptr,a
      00017F 75 82 01         [24] 1282 	mov	dpl,#0x01
      000182 12r00r00         [24] 1283 	lcall	_nrf24_device
                                   1284 ;	report.c:56: printf(_buffer);
      000185 74r08            [12] 1285 	mov	a,#__buffer
      000187 C0 E0            [24] 1286 	push	acc
      000189 74s00            [12] 1287 	mov	a,#(__buffer >> 8)
      00018B C0 E0            [24] 1288 	push	acc
      00018D E4               [12] 1289 	clr	a
      00018E C0 E0            [24] 1290 	push	acc
      000190 12r00r00         [24] 1291 	lcall	_printf
      000193 15 81            [12] 1292 	dec	sp
      000195 15 81            [12] 1293 	dec	sp
      000197 15 81            [12] 1294 	dec	sp
                                   1295 ;	report.c:57: } 
      000199 D0*00            [24] 1296 	pop	_bp
      00019B 22               [24] 1297 	ret
                                   1298 	.area CSEG    (CODE)
                                   1299 	.area CONST   (CODE)
                                   1300 	.area CONST   (CODE)
      000000                       1301 ___str_0:
      000000 74 65 73 74 74 65 73  1302 	.ascii "testtesttesttest"
             74 74 65 73 74 74 65
             73 74
      000010 00                    1303 	.db 0x00
                                   1304 	.area CSEG    (CODE)
                                   1305 	.area CONST   (CODE)
      000011                       1306 ___str_1:
      000011 6E 72 66 32 34 20 66  1307 	.ascii "nrf24 failed to send!"
             61 69 6C 65 64 20 74
             6F 20 73 65 6E 64 21
      000026 00                    1308 	.db 0x00
                                   1309 	.area CSEG    (CODE)
                                   1310 	.area CONST   (CODE)
      000027                       1311 ___str_2:
      000027 2E                    1312 	.ascii "."
      000028 00                    1313 	.db 0x00
                                   1314 	.area CSEG    (CODE)
                                   1315 	.area CONST   (CODE)
      000029                       1316 ___str_3:
      000029 0A                    1317 	.db 0x0a
      00002A 00                    1318 	.db 0x00
                                   1319 	.area CSEG    (CODE)
                                   1320 	.area XINIT   (CODE)
      000000                       1321 __xinit__led_pin:
      000000 01                    1322 	.db #0x01	; 1
      000001 03                    1323 	.db #0x03	; 3
      000002 01                    1324 	.db #0x01	; 1
      000003 00                    1325 	.db #0x00	; 0
      000004 01                    1326 	.db #0x01	; 1
      000005 00                    1327 	.db #0x00	; 0
      000006 03                    1328 	.db #0x03	; 3
      000007 01                    1329 	.db #0x01	; 1
      000008 00                    1330 	.db #0x00	; 0
      000009 00                    1331 	.db #0x00	; 0
      00000A 00                    1332 	.db #0x00	; 0
      00000B 00                    1333 	.db #0x00	; 0
      00000C 00                    1334 	.db #0x00	; 0
                                   1335 	.area CABS    (ABS,CODE)
