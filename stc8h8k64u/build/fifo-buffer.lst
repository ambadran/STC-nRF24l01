                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ISO C Compiler 
                                      3 ; Version 4.4.0 #14620 (Mac OS X ppc)
                                      4 ;--------------------------------------------------------
                                      5 	.module fifo_buffer
                                      6 	.optsdcc -mmcs51 --model-large
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _S1SM0_FE
                                     12 	.globl _T1IE
                                     13 	.globl _T0IE
                                     14 	.globl _T1RUN
                                     15 	.globl _T0RUN
                                     16 	.globl _CY
                                     17 	.globl _AC
                                     18 	.globl _F0
                                     19 	.globl _RS1
                                     20 	.globl _RS0
                                     21 	.globl _OV
                                     22 	.globl _F1
                                     23 	.globl _P
                                     24 	.globl _EA
                                     25 	.globl _INT1IE
                                     26 	.globl _INT0IE
                                     27 	.globl _INT1TR
                                     28 	.globl _INT0TR
                                     29 	.globl _P5_5
                                     30 	.globl _P5_4
                                     31 	.globl _P5_3
                                     32 	.globl _P5_2
                                     33 	.globl _P5_1
                                     34 	.globl _P5_0
                                     35 	.globl _P3_7
                                     36 	.globl _P3_6
                                     37 	.globl _P3_5
                                     38 	.globl _P3_4
                                     39 	.globl _P3_3
                                     40 	.globl _P3_2
                                     41 	.globl _P3_1
                                     42 	.globl _P3_0
                                     43 	.globl _P2_7
                                     44 	.globl _P2_6
                                     45 	.globl _P2_5
                                     46 	.globl _P2_4
                                     47 	.globl _P2_3
                                     48 	.globl _P2_2
                                     49 	.globl _P2_1
                                     50 	.globl _P2_0
                                     51 	.globl _P1_7
                                     52 	.globl _P1_6
                                     53 	.globl _P1_5
                                     54 	.globl _P1_4
                                     55 	.globl _P1_3
                                     56 	.globl _P1_2
                                     57 	.globl _P1_1
                                     58 	.globl _P1_0
                                     59 	.globl _USBADR
                                     60 	.globl _USBCON
                                     61 	.globl _USBDAT
                                     62 	.globl _USBCLK
                                     63 	.globl _S4BUF
                                     64 	.globl _S4CON
                                     65 	.globl _S3BUF
                                     66 	.globl _S3CON
                                     67 	.globl _S2BUF
                                     68 	.globl _S2CON
                                     69 	.globl _S1BUF
                                     70 	.globl _S1CON
                                     71 	.globl _SADEN
                                     72 	.globl _SADDR
                                     73 	.globl _AUXINTIF
                                     74 	.globl _T3
                                     75 	.globl _T3L
                                     76 	.globl _T3H
                                     77 	.globl _T4
                                     78 	.globl _T4L
                                     79 	.globl _T4H
                                     80 	.globl _T4T3M
                                     81 	.globl _WDT_CONTR
                                     82 	.globl _AUXR
                                     83 	.globl _T2
                                     84 	.globl _T2H
                                     85 	.globl _T2L
                                     86 	.globl _T1
                                     87 	.globl _T1H
                                     88 	.globl _T1L
                                     89 	.globl _T0
                                     90 	.globl _T0H
                                     91 	.globl _T0L
                                     92 	.globl _TMOD
                                     93 	.globl _TCON
                                     94 	.globl _IRTRIM
                                     95 	.globl _LIRTRIM
                                     96 	.globl _IRCBAND
                                     97 	.globl _SPDAT
                                     98 	.globl _SPCTL
                                     99 	.globl _SPSTAT
                                    100 	.globl _WKTC
                                    101 	.globl _WKTCH
                                    102 	.globl _WKTCL
                                    103 	.globl _BUS_SPEED
                                    104 	.globl _P_SW2
                                    105 	.globl _P_SW1
                                    106 	.globl _RSTCFG
                                    107 	.globl _PCON
                                    108 	.globl _B
                                    109 	.globl _ACC
                                    110 	.globl _PSW
                                    111 	.globl _SP
                                    112 	.globl _IP3H
                                    113 	.globl _IP3L
                                    114 	.globl _IP2H
                                    115 	.globl _IP2L
                                    116 	.globl _IE2
                                    117 	.globl _IP1H
                                    118 	.globl _IP1L
                                    119 	.globl _IE1
                                    120 	.globl _INT_CLKO
                                    121 	.globl _IAP_TPS
                                    122 	.globl _IAP_CONTR
                                    123 	.globl _IAP_TRIG
                                    124 	.globl _IAP_CMD
                                    125 	.globl _IAP_ADDR
                                    126 	.globl _IAP_ADDRL
                                    127 	.globl _IAP_ADDRH
                                    128 	.globl _IAP_DATA
                                    129 	.globl _P5M0
                                    130 	.globl _P5M1
                                    131 	.globl _P5
                                    132 	.globl _P3M0
                                    133 	.globl _P3M1
                                    134 	.globl _P3
                                    135 	.globl _P2M0
                                    136 	.globl _P2M1
                                    137 	.globl _P2
                                    138 	.globl _P1M0
                                    139 	.globl _P1M1
                                    140 	.globl _P1
                                    141 	.globl _TA
                                    142 	.globl _DPH1
                                    143 	.globl _DPL1
                                    144 	.globl _DPS
                                    145 	.globl _DP
                                    146 	.globl _DPH
                                    147 	.globl _DPL
                                    148 	.globl _CMPCR2
                                    149 	.globl _CMPCR1
                                    150 	.globl _DMA_ADC_AMT
                                    151 	.globl _ADCCFG
                                    152 	.globl _ADC_RES
                                    153 	.globl _ADC_RESL
                                    154 	.globl _ADC_RESH
                                    155 	.globl _ADC_CONTR
                                    156 	.globl _DMA_UR4R_TXAL
                                    157 	.globl _DMA_UR4R_TXAH
                                    158 	.globl _DMA_UR4R_DONE
                                    159 	.globl _DMA_UR4R_AMT
                                    160 	.globl _DMA_UR4R_STA
                                    161 	.globl _DMA_UR4R_CR
                                    162 	.globl _DMA_UR4R_CFG
                                    163 	.globl _DMA_UR4T_TXAL
                                    164 	.globl _DMA_UR4T_TXAH
                                    165 	.globl _DMA_UR4T_DONE
                                    166 	.globl _DMA_UR4T_AMT
                                    167 	.globl _DMA_UR4T_STA
                                    168 	.globl _DMA_UR4T_CR
                                    169 	.globl _DMA_UR4T_CFG
                                    170 	.globl _DMA_UR3R_TXAL
                                    171 	.globl _DMA_UR3R_TXAH
                                    172 	.globl _DMA_UR3R_DONE
                                    173 	.globl _DMA_UR3R_AMT
                                    174 	.globl _DMA_UR3R_STA
                                    175 	.globl _DMA_UR3R_CR
                                    176 	.globl _DMA_UR3R_CFG
                                    177 	.globl _DMA_UR3T_TXAL
                                    178 	.globl _DMA_UR3T_TXAH
                                    179 	.globl _DMA_UR3T_DONE
                                    180 	.globl _DMA_UR3T_AMT
                                    181 	.globl _DMA_UR3T_STA
                                    182 	.globl _DMA_UR3T_CR
                                    183 	.globl _DMA_UR3T_CFG
                                    184 	.globl _DMA_UR2R_TXAL
                                    185 	.globl _DMA_UR2R_TXAH
                                    186 	.globl _DMA_UR2R_DONE
                                    187 	.globl _DMA_UR2R_AMT
                                    188 	.globl _DMA_UR2R_STA
                                    189 	.globl _DMA_UR2R_CR
                                    190 	.globl _DMA_UR2R_CFG
                                    191 	.globl _DMA_UR2T_TXAL
                                    192 	.globl _DMA_UR2T_TXAH
                                    193 	.globl _DMA_UR2T_DONE
                                    194 	.globl _DMA_UR2T_AMT
                                    195 	.globl _DMA_UR2T_STA
                                    196 	.globl _DMA_UR2T_CR
                                    197 	.globl _DMA_UR2T_CFG
                                    198 	.globl _DMA_UR1R_TXAL
                                    199 	.globl _DMA_UR1R_TXAH
                                    200 	.globl _DMA_UR1R_DONE
                                    201 	.globl _DMA_UR1R_AMT
                                    202 	.globl _DMA_UR1R_STA
                                    203 	.globl _DMA_UR1R_CR
                                    204 	.globl _DMA_UR1R_CFG
                                    205 	.globl _DMA_UR1T_TXAL
                                    206 	.globl _DMA_UR1T_TXAH
                                    207 	.globl _DMA_UR1T_DONE
                                    208 	.globl _DMA_URTX_AMT
                                    209 	.globl _DMA_UR1T_STA
                                    210 	.globl _DMA_UR1T_CR
                                    211 	.globl _DMA_UR1T_CFG
                                    212 	.globl _TM4PS
                                    213 	.globl _TM3PS
                                    214 	.globl _TM2PS
                                    215 	.globl _IRC48MCR
                                    216 	.globl _IRCDB
                                    217 	.globl _MCLKOCR
                                    218 	.globl _CKSEL
                                    219 	.globl _IRC32KCR
                                    220 	.globl _XOSCCR
                                    221 	.globl _HIRCCR
                                    222 	.globl _CLKDIV
                                    223 	.globl _DMA_SPI_CFG2
                                    224 	.globl _DMA_SPI_RXAL
                                    225 	.globl _DMA_SPI_RXAH
                                    226 	.globl _DMA_SPI_TXAL
                                    227 	.globl _DMA_SPI_TXAH
                                    228 	.globl _DMA_SPI_DONE
                                    229 	.globl _DMA_SPI_AMT
                                    230 	.globl _DMA_SPI_STA
                                    231 	.globl _DMA_SPI_CR
                                    232 	.globl _DMA_SPI_CFG
                                    233 	.globl _SSEC
                                    234 	.globl _SEC
                                    235 	.globl _MIN
                                    236 	.globl _HOUR
                                    237 	.globl _DAY
                                    238 	.globl _MONTH
                                    239 	.globl _YEAR
                                    240 	.globl _INISSEC
                                    241 	.globl _INISEC
                                    242 	.globl _INIMIN
                                    243 	.globl _INIHOUR
                                    244 	.globl _INIDAY
                                    245 	.globl _INIMONTH
                                    246 	.globl _INIYEAR
                                    247 	.globl _ALASSEC
                                    248 	.globl _ALASEC
                                    249 	.globl _ALAMIN
                                    250 	.globl _ALAHOUR
                                    251 	.globl _RTCIF
                                    252 	.globl _RTCIEN
                                    253 	.globl _RTCCFG
                                    254 	.globl _RTCCR
                                    255 	.globl _PWMB_OISR
                                    256 	.globl _PWMB_DTR
                                    257 	.globl _PWMB_BKR
                                    258 	.globl _PWMB_CCR4L
                                    259 	.globl _PWMB_CCR4H
                                    260 	.globl _PWMB_CCR3L
                                    261 	.globl _PWMB_CCR3H
                                    262 	.globl _PWMB_CCR2L
                                    263 	.globl _PWMB_CCR2H
                                    264 	.globl _PWMB_CCR1L
                                    265 	.globl _PWMB_CCR1H
                                    266 	.globl _PWMB_RCR
                                    267 	.globl _PWMB_ARRL
                                    268 	.globl _PWMB_ARRH
                                    269 	.globl _PWMB_PSCRL
                                    270 	.globl _PWMB_PSCRH
                                    271 	.globl _PWMB_CNTRL
                                    272 	.globl _PWMB_CNTRH
                                    273 	.globl _PWMB_CCER2
                                    274 	.globl _PWMB_CCER1
                                    275 	.globl _PWMB_CCMR4
                                    276 	.globl _PWMB_CCMR3
                                    277 	.globl _PWMB_CCMR2
                                    278 	.globl _PWMB_CCMR1
                                    279 	.globl _PWMB_EGR
                                    280 	.globl _PWMB_SR2
                                    281 	.globl _PWMB_SR1
                                    282 	.globl _PWMB_IER
                                    283 	.globl _PWMB_ETR
                                    284 	.globl _PWMB_SMCR
                                    285 	.globl _PWMB_CR2
                                    286 	.globl _PWMB_CR1
                                    287 	.globl _PWMA_OISR
                                    288 	.globl _PWMA_DTR
                                    289 	.globl _PWMA_BKR
                                    290 	.globl _PWMA_CCR4L
                                    291 	.globl _PWMA_CCR4H
                                    292 	.globl _PWMA_CCR3L
                                    293 	.globl _PWMA_CCR3H
                                    294 	.globl _PWMA_CCR2L
                                    295 	.globl _PWMA_CCR2H
                                    296 	.globl _PWMA_CCR1L
                                    297 	.globl _PWMA_CCR1H
                                    298 	.globl _PWMA_RCR
                                    299 	.globl _PWMA_ARRL
                                    300 	.globl _PWMA_ARRH
                                    301 	.globl _PWMA_PSCRL
                                    302 	.globl _PWMA_PSCRH
                                    303 	.globl _PWMA_CNTRL
                                    304 	.globl _PWMA_CNTRH
                                    305 	.globl _PWMA_CCER2
                                    306 	.globl _PWMA_CCER1
                                    307 	.globl _PWMA_CCMR4
                                    308 	.globl _PWMA_CCMR3
                                    309 	.globl _PWMA_CCMR2
                                    310 	.globl _PWMA_CCMR1
                                    311 	.globl _PWMA_EGR
                                    312 	.globl _PWMA_SR2
                                    313 	.globl _PWMA_SR1
                                    314 	.globl _PWMA_IER
                                    315 	.globl _PWMA_ETR
                                    316 	.globl _PWMA_SMCR
                                    317 	.globl _PWMA_CR2
                                    318 	.globl _PWMA_CR1
                                    319 	.globl _PWMB_IOAUX
                                    320 	.globl _PWMB_PS
                                    321 	.globl _PWMB_ENO
                                    322 	.globl _PWMB_ETRPS
                                    323 	.globl _PWMA_IOAUX
                                    324 	.globl _PWMA_PS
                                    325 	.globl _PWMA_ENO
                                    326 	.globl _PWMA_ETRPS
                                    327 	.globl _RSTFLAG
                                    328 	.globl _SPFUNC
                                    329 	.globl _OPCON
                                    330 	.globl _ARCON
                                    331 	.globl _MD4
                                    332 	.globl _MD5
                                    333 	.globl _MD0
                                    334 	.globl _MD1
                                    335 	.globl _MD2
                                    336 	.globl _MD3
                                    337 	.globl _DMA_LCM_RXAL
                                    338 	.globl _DMA_LCM_RXAH
                                    339 	.globl _DMA_LCM_TXAL
                                    340 	.globl _DMA_LCM_TXAH
                                    341 	.globl _DMA_LCM_DONE
                                    342 	.globl _DMA_LCM_AMT
                                    343 	.globl _DMA_LCM_STA
                                    344 	.globl _DMA_LCM_CR
                                    345 	.globl _DMA_LCM_CFG
                                    346 	.globl _LCMIDDAT
                                    347 	.globl _LCMIDDATH
                                    348 	.globl _LCMIDDATL
                                    349 	.globl _LCMSTA
                                    350 	.globl _LCMCR
                                    351 	.globl _LCMCFG2
                                    352 	.globl _LCMCFG
                                    353 	.globl _I2CMSAUX
                                    354 	.globl _I2CRXD
                                    355 	.globl _I2CTXD
                                    356 	.globl _I2CSLADR
                                    357 	.globl _I2CSLST
                                    358 	.globl _I2CSLCR
                                    359 	.globl _I2CMSST
                                    360 	.globl _I2CMSCR
                                    361 	.globl _I2CCFG
                                    362 	.globl _PINIPH
                                    363 	.globl _PINIPL
                                    364 	.globl _P5IE
                                    365 	.globl _P5DR
                                    366 	.globl _P5SR
                                    367 	.globl _P5NCS
                                    368 	.globl _P5PU
                                    369 	.globl _P5WKUE
                                    370 	.globl _P5IM1
                                    371 	.globl _P5IM0
                                    372 	.globl _P5INTF
                                    373 	.globl _P5INTE
                                    374 	.globl _P3IE
                                    375 	.globl _P3DR
                                    376 	.globl _P3SR
                                    377 	.globl _P3NCS
                                    378 	.globl _P3PU
                                    379 	.globl _P3WKUE
                                    380 	.globl _P3IM1
                                    381 	.globl _P3IM0
                                    382 	.globl _P3INTF
                                    383 	.globl _P3INTE
                                    384 	.globl _P2IE
                                    385 	.globl _P2DR
                                    386 	.globl _P2SR
                                    387 	.globl _P2NCS
                                    388 	.globl _P2PU
                                    389 	.globl _P2WKUE
                                    390 	.globl _P2IM1
                                    391 	.globl _P2IM0
                                    392 	.globl _P2INTF
                                    393 	.globl _P2INTE
                                    394 	.globl _P1IE
                                    395 	.globl _P1DR
                                    396 	.globl _P1SR
                                    397 	.globl _P1NCS
                                    398 	.globl _P1PU
                                    399 	.globl _P1WKUE
                                    400 	.globl _P1IM1
                                    401 	.globl _P1IM0
                                    402 	.globl _P1INTF
                                    403 	.globl _P1INTE
                                    404 	.globl _DMA_M2M_RXAL
                                    405 	.globl _DMA_M2M_RXAH
                                    406 	.globl _DMA_M2M_TXAL
                                    407 	.globl _DMA_M2M_TXAH
                                    408 	.globl _DMA_M2M_DONE
                                    409 	.globl _DMA_M2M_AMT
                                    410 	.globl _DMA_M2M_STA
                                    411 	.globl _DMA_M2M_CR
                                    412 	.globl _DMA_M2M_CFG
                                    413 	.globl _CMPEXCFG
                                    414 	.globl _DMA_ADC_CHSW1
                                    415 	.globl _DMA_ADC_CHSW0
                                    416 	.globl _DMA_ADC_CFG2
                                    417 	.globl _DMA_ADC_RXAL
                                    418 	.globl _DMA_ADC_RXAH
                                    419 	.globl _DMA_ADC_STA
                                    420 	.globl _DMA_ADC_CR
                                    421 	.globl _DMA_ADC_CFG
                                    422 	.globl _ADCEXCFG
                                    423 	.globl _ADCTIM
                                    424 	.globl _fifoClear
                                    425 	.globl _fifoIsFull
                                    426 	.globl _fifoBytesFree
                                    427 	.globl _fifoWrite
                                    428 	.globl _fifoRead
                                    429 ;--------------------------------------------------------
                                    430 ; special function registers
                                    431 ;--------------------------------------------------------
                                    432 	.area RSEG    (ABS,DATA)
      000000                        433 	.org 0x0000
                           0000BC   434 _ADC_CONTR	=	0x00bc
                           0000BD   435 _ADC_RESH	=	0x00bd
                           0000BE   436 _ADC_RESL	=	0x00be
                           00BDBE   437 _ADC_RES	=	0xbdbe
                           0000DE   438 _ADCCFG	=	0x00de
                           0000FA   439 _DMA_ADC_AMT	=	0x00fa
                           0000E6   440 _CMPCR1	=	0x00e6
                           0000E7   441 _CMPCR2	=	0x00e7
                           000082   442 _DPL	=	0x0082
                           000083   443 _DPH	=	0x0083
                           008382   444 _DP	=	0x8382
                           0000E3   445 _DPS	=	0x00e3
                           0000E4   446 _DPL1	=	0x00e4
                           0000E5   447 _DPH1	=	0x00e5
                           0000AE   448 _TA	=	0x00ae
                           000090   449 _P1	=	0x0090
                           000091   450 _P1M1	=	0x0091
                           000092   451 _P1M0	=	0x0092
                           0000A0   452 _P2	=	0x00a0
                           000095   453 _P2M1	=	0x0095
                           000096   454 _P2M0	=	0x0096
                           0000B0   455 _P3	=	0x00b0
                           0000B1   456 _P3M1	=	0x00b1
                           0000B2   457 _P3M0	=	0x00b2
                           0000C8   458 _P5	=	0x00c8
                           0000C9   459 _P5M1	=	0x00c9
                           0000CA   460 _P5M0	=	0x00ca
                           0000C2   461 _IAP_DATA	=	0x00c2
                           0000C3   462 _IAP_ADDRH	=	0x00c3
                           0000C4   463 _IAP_ADDRL	=	0x00c4
                           00C3C4   464 _IAP_ADDR	=	0xc3c4
                           0000C5   465 _IAP_CMD	=	0x00c5
                           0000C6   466 _IAP_TRIG	=	0x00c6
                           0000C7   467 _IAP_CONTR	=	0x00c7
                           0000F5   468 _IAP_TPS	=	0x00f5
                           00008F   469 _INT_CLKO	=	0x008f
                           0000A8   470 _IE1	=	0x00a8
                           0000B8   471 _IP1L	=	0x00b8
                           0000B7   472 _IP1H	=	0x00b7
                           0000AF   473 _IE2	=	0x00af
                           0000B5   474 _IP2L	=	0x00b5
                           0000B6   475 _IP2H	=	0x00b6
                           0000DF   476 _IP3L	=	0x00df
                           0000EE   477 _IP3H	=	0x00ee
                           000081   478 _SP	=	0x0081
                           0000D0   479 _PSW	=	0x00d0
                           0000E0   480 _ACC	=	0x00e0
                           0000F0   481 _B	=	0x00f0
                           000087   482 _PCON	=	0x0087
                           0000FF   483 _RSTCFG	=	0x00ff
                           0000A2   484 _P_SW1	=	0x00a2
                           0000BA   485 _P_SW2	=	0x00ba
                           0000A1   486 _BUS_SPEED	=	0x00a1
                           0000AA   487 _WKTCL	=	0x00aa
                           0000AB   488 _WKTCH	=	0x00ab
                           00ABAA   489 _WKTC	=	0xabaa
                           0000CD   490 _SPSTAT	=	0x00cd
                           0000CE   491 _SPCTL	=	0x00ce
                           0000CF   492 _SPDAT	=	0x00cf
                           00009D   493 _IRCBAND	=	0x009d
                           00009E   494 _LIRTRIM	=	0x009e
                           00009F   495 _IRTRIM	=	0x009f
                           000088   496 _TCON	=	0x0088
                           000089   497 _TMOD	=	0x0089
                           00008A   498 _T0L	=	0x008a
                           00008C   499 _T0H	=	0x008c
                           008C8A   500 _T0	=	0x8c8a
                           00008B   501 _T1L	=	0x008b
                           00008D   502 _T1H	=	0x008d
                           008D8B   503 _T1	=	0x8d8b
                           0000D7   504 _T2L	=	0x00d7
                           0000D6   505 _T2H	=	0x00d6
                           00D6D7   506 _T2	=	0xd6d7
                           00008E   507 _AUXR	=	0x008e
                           0000C1   508 _WDT_CONTR	=	0x00c1
                           0000D1   509 _T4T3M	=	0x00d1
                           0000D2   510 _T4H	=	0x00d2
                           0000D3   511 _T4L	=	0x00d3
                           00D2D3   512 _T4	=	0xd2d3
                           0000D4   513 _T3H	=	0x00d4
                           0000D5   514 _T3L	=	0x00d5
                           00D4D5   515 _T3	=	0xd4d5
                           0000EF   516 _AUXINTIF	=	0x00ef
                           0000A9   517 _SADDR	=	0x00a9
                           0000B9   518 _SADEN	=	0x00b9
                           000098   519 _S1CON	=	0x0098
                           000099   520 _S1BUF	=	0x0099
                           00009A   521 _S2CON	=	0x009a
                           00009B   522 _S2BUF	=	0x009b
                           0000AC   523 _S3CON	=	0x00ac
                           0000AD   524 _S3BUF	=	0x00ad
                           000084   525 _S4CON	=	0x0084
                           000085   526 _S4BUF	=	0x0085
                           0000DC   527 _USBCLK	=	0x00dc
                           0000EC   528 _USBDAT	=	0x00ec
                           0000F4   529 _USBCON	=	0x00f4
                           0000FC   530 _USBADR	=	0x00fc
                                    531 ;--------------------------------------------------------
                                    532 ; special function bits
                                    533 ;--------------------------------------------------------
                                    534 	.area RSEG    (ABS,DATA)
      000000                        535 	.org 0x0000
                           000090   536 _P1_0	=	0x0090
                           000091   537 _P1_1	=	0x0091
                           000092   538 _P1_2	=	0x0092
                           000093   539 _P1_3	=	0x0093
                           000094   540 _P1_4	=	0x0094
                           000095   541 _P1_5	=	0x0095
                           000096   542 _P1_6	=	0x0096
                           000097   543 _P1_7	=	0x0097
                           0000A0   544 _P2_0	=	0x00a0
                           0000A1   545 _P2_1	=	0x00a1
                           0000A2   546 _P2_2	=	0x00a2
                           0000A3   547 _P2_3	=	0x00a3
                           0000A4   548 _P2_4	=	0x00a4
                           0000A5   549 _P2_5	=	0x00a5
                           0000A6   550 _P2_6	=	0x00a6
                           0000A7   551 _P2_7	=	0x00a7
                           0000B0   552 _P3_0	=	0x00b0
                           0000B1   553 _P3_1	=	0x00b1
                           0000B2   554 _P3_2	=	0x00b2
                           0000B3   555 _P3_3	=	0x00b3
                           0000B4   556 _P3_4	=	0x00b4
                           0000B5   557 _P3_5	=	0x00b5
                           0000B6   558 _P3_6	=	0x00b6
                           0000B7   559 _P3_7	=	0x00b7
                           0000C8   560 _P5_0	=	0x00c8
                           0000C9   561 _P5_1	=	0x00c9
                           0000CA   562 _P5_2	=	0x00ca
                           0000CB   563 _P5_3	=	0x00cb
                           0000CC   564 _P5_4	=	0x00cc
                           0000CD   565 _P5_5	=	0x00cd
                           000088   566 _INT0TR	=	0x0088
                           00008A   567 _INT1TR	=	0x008a
                           0000A8   568 _INT0IE	=	0x00a8
                           0000AA   569 _INT1IE	=	0x00aa
                           0000AF   570 _EA	=	0x00af
                           0000D0   571 _P	=	0x00d0
                           0000D1   572 _F1	=	0x00d1
                           0000D2   573 _OV	=	0x00d2
                           0000D3   574 _RS0	=	0x00d3
                           0000D4   575 _RS1	=	0x00d4
                           0000D5   576 _F0	=	0x00d5
                           0000D6   577 _AC	=	0x00d6
                           0000D7   578 _CY	=	0x00d7
                           00008C   579 _T0RUN	=	0x008c
                           00008E   580 _T1RUN	=	0x008e
                           0000A9   581 _T0IE	=	0x00a9
                           0000AB   582 _T1IE	=	0x00ab
                           00009F   583 _S1SM0_FE	=	0x009f
                                    584 ;--------------------------------------------------------
                                    585 ; overlayable register banks
                                    586 ;--------------------------------------------------------
                                    587 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                        588 	.ds 8
                                    589 ;--------------------------------------------------------
                                    590 ; overlayable bit register bank
                                    591 ;--------------------------------------------------------
                                    592 	.area BIT_BANK	(REL,OVR,DATA)
      000000                        593 bits:
      000000                        594 	.ds 1
                           008000   595 	b0 = bits[0]
                           008100   596 	b1 = bits[1]
                           008200   597 	b2 = bits[2]
                           008300   598 	b3 = bits[3]
                           008400   599 	b4 = bits[4]
                           008500   600 	b5 = bits[5]
                           008600   601 	b6 = bits[6]
                           008700   602 	b7 = bits[7]
                                    603 ;--------------------------------------------------------
                                    604 ; internal ram data
                                    605 ;--------------------------------------------------------
                                    606 	.area DSEG    (DATA)
                                    607 ;--------------------------------------------------------
                                    608 ; overlayable items in internal ram
                                    609 ;--------------------------------------------------------
                                    610 ;--------------------------------------------------------
                                    611 ; indirectly addressable internal ram data
                                    612 ;--------------------------------------------------------
                                    613 	.area ISEG    (DATA)
                                    614 ;--------------------------------------------------------
                                    615 ; absolute internal ram data
                                    616 ;--------------------------------------------------------
                                    617 	.area IABS    (ABS,DATA)
                                    618 	.area IABS    (ABS,DATA)
                                    619 ;--------------------------------------------------------
                                    620 ; bit data
                                    621 ;--------------------------------------------------------
                                    622 	.area BSEG    (BIT)
      000000                        623 _fifoIsFull_sloc0_1_0:
      000000                        624 	.ds 1
                                    625 ;--------------------------------------------------------
                                    626 ; paged external ram data
                                    627 ;--------------------------------------------------------
                                    628 	.area PSEG    (PAG,XDATA)
                                    629 ;--------------------------------------------------------
                                    630 ; uninitialized external ram data
                                    631 ;--------------------------------------------------------
                                    632 	.area XSEG    (XDATA)
                           00FEA8   633 _ADCTIM	=	0xfea8
                           00FEAD   634 _ADCEXCFG	=	0xfead
                           00FA10   635 _DMA_ADC_CFG	=	0xfa10
                           00FA11   636 _DMA_ADC_CR	=	0xfa11
                           00FA12   637 _DMA_ADC_STA	=	0xfa12
                           00FA17   638 _DMA_ADC_RXAH	=	0xfa17
                           00FA18   639 _DMA_ADC_RXAL	=	0xfa18
                           00FA19   640 _DMA_ADC_CFG2	=	0xfa19
                           00FA1A   641 _DMA_ADC_CHSW0	=	0xfa1a
                           00FA1B   642 _DMA_ADC_CHSW1	=	0xfa1b
                           00FEAE   643 _CMPEXCFG	=	0xfeae
                           00FA00   644 _DMA_M2M_CFG	=	0xfa00
                           00FA01   645 _DMA_M2M_CR	=	0xfa01
                           00FA02   646 _DMA_M2M_STA	=	0xfa02
                           00FA03   647 _DMA_M2M_AMT	=	0xfa03
                           00FA04   648 _DMA_M2M_DONE	=	0xfa04
                           00FA05   649 _DMA_M2M_TXAH	=	0xfa05
                           00FA06   650 _DMA_M2M_TXAL	=	0xfa06
                           00FA07   651 _DMA_M2M_RXAH	=	0xfa07
                           00FA08   652 _DMA_M2M_RXAL	=	0xfa08
                           00FD01   653 _P1INTE	=	0xfd01
                           00FD11   654 _P1INTF	=	0xfd11
                           00FD21   655 _P1IM0	=	0xfd21
                           00FD31   656 _P1IM1	=	0xfd31
                           00FD41   657 _P1WKUE	=	0xfd41
                           00FE11   658 _P1PU	=	0xfe11
                           00FE19   659 _P1NCS	=	0xfe19
                           00FE21   660 _P1SR	=	0xfe21
                           00FE29   661 _P1DR	=	0xfe29
                           00FE31   662 _P1IE	=	0xfe31
                           00FD02   663 _P2INTE	=	0xfd02
                           00FD12   664 _P2INTF	=	0xfd12
                           00FD22   665 _P2IM0	=	0xfd22
                           00FD32   666 _P2IM1	=	0xfd32
                           00FD42   667 _P2WKUE	=	0xfd42
                           00FE12   668 _P2PU	=	0xfe12
                           00FE1A   669 _P2NCS	=	0xfe1a
                           00FE22   670 _P2SR	=	0xfe22
                           00FE2A   671 _P2DR	=	0xfe2a
                           00FE32   672 _P2IE	=	0xfe32
                           00FD03   673 _P3INTE	=	0xfd03
                           00FD13   674 _P3INTF	=	0xfd13
                           00FD23   675 _P3IM0	=	0xfd23
                           00FD33   676 _P3IM1	=	0xfd33
                           00FD43   677 _P3WKUE	=	0xfd43
                           00FE13   678 _P3PU	=	0xfe13
                           00FE1B   679 _P3NCS	=	0xfe1b
                           00FE23   680 _P3SR	=	0xfe23
                           00FE2B   681 _P3DR	=	0xfe2b
                           00FE33   682 _P3IE	=	0xfe33
                           00FD05   683 _P5INTE	=	0xfd05
                           00FD15   684 _P5INTF	=	0xfd15
                           00FD25   685 _P5IM0	=	0xfd25
                           00FD35   686 _P5IM1	=	0xfd35
                           00FD45   687 _P5WKUE	=	0xfd45
                           00FE15   688 _P5PU	=	0xfe15
                           00FE1D   689 _P5NCS	=	0xfe1d
                           00FE25   690 _P5SR	=	0xfe25
                           00FE2D   691 _P5DR	=	0xfe2d
                           00FE35   692 _P5IE	=	0xfe35
                           00FD60   693 _PINIPL	=	0xfd60
                           00FD61   694 _PINIPH	=	0xfd61
                           00FE80   695 _I2CCFG	=	0xfe80
                           00FE81   696 _I2CMSCR	=	0xfe81
                           00FE82   697 _I2CMSST	=	0xfe82
                           00FE83   698 _I2CSLCR	=	0xfe83
                           00FE84   699 _I2CSLST	=	0xfe84
                           00FE85   700 _I2CSLADR	=	0xfe85
                           00FE86   701 _I2CTXD	=	0xfe86
                           00FE87   702 _I2CRXD	=	0xfe87
                           00FE88   703 _I2CMSAUX	=	0xfe88
                           00FE50   704 _LCMCFG	=	0xfe50
                           00FE51   705 _LCMCFG2	=	0xfe51
                           00FE52   706 _LCMCR	=	0xfe52
                           00FE53   707 _LCMSTA	=	0xfe53
                           00FE54   708 _LCMIDDATL	=	0xfe54
                           00FE55   709 _LCMIDDATH	=	0xfe55
                           00FE54   710 _LCMIDDAT	=	0xfe54
                           00FA70   711 _DMA_LCM_CFG	=	0xfa70
                           00FA71   712 _DMA_LCM_CR	=	0xfa71
                           00FA72   713 _DMA_LCM_STA	=	0xfa72
                           00FA73   714 _DMA_LCM_AMT	=	0xfa73
                           00FA74   715 _DMA_LCM_DONE	=	0xfa74
                           00FA75   716 _DMA_LCM_TXAH	=	0xfa75
                           00FA76   717 _DMA_LCM_TXAL	=	0xfa76
                           00FA77   718 _DMA_LCM_RXAH	=	0xfa77
                           00FA78   719 _DMA_LCM_RXAL	=	0xfa78
                           00FCF0   720 _MD3	=	0xfcf0
                           00FCF1   721 _MD2	=	0xfcf1
                           00FCF2   722 _MD1	=	0xfcf2
                           00FCF3   723 _MD0	=	0xfcf3
                           00FCF4   724 _MD5	=	0xfcf4
                           00FCF5   725 _MD4	=	0xfcf5
                           00FCF6   726 _ARCON	=	0xfcf6
                           00FCF7   727 _OPCON	=	0xfcf7
                           00FE08   728 _SPFUNC	=	0xfe08
                           00FE09   729 _RSTFLAG	=	0xfe09
                           00FEB0   730 _PWMA_ETRPS	=	0xfeb0
                           00FEB1   731 _PWMA_ENO	=	0xfeb1
                           00FEB2   732 _PWMA_PS	=	0xfeb2
                           00FEB3   733 _PWMA_IOAUX	=	0xfeb3
                           00FEB4   734 _PWMB_ETRPS	=	0xfeb4
                           00FEB5   735 _PWMB_ENO	=	0xfeb5
                           00FEB6   736 _PWMB_PS	=	0xfeb6
                           00FEB7   737 _PWMB_IOAUX	=	0xfeb7
                           00FEC0   738 _PWMA_CR1	=	0xfec0
                           00FEC1   739 _PWMA_CR2	=	0xfec1
                           00FEC2   740 _PWMA_SMCR	=	0xfec2
                           00FEC3   741 _PWMA_ETR	=	0xfec3
                           00FEC4   742 _PWMA_IER	=	0xfec4
                           00FEC5   743 _PWMA_SR1	=	0xfec5
                           00FEC6   744 _PWMA_SR2	=	0xfec6
                           00FEC7   745 _PWMA_EGR	=	0xfec7
                           00FEC8   746 _PWMA_CCMR1	=	0xfec8
                           00FEC9   747 _PWMA_CCMR2	=	0xfec9
                           00FECA   748 _PWMA_CCMR3	=	0xfeca
                           00FECB   749 _PWMA_CCMR4	=	0xfecb
                           00FECC   750 _PWMA_CCER1	=	0xfecc
                           00FECD   751 _PWMA_CCER2	=	0xfecd
                           00FECE   752 _PWMA_CNTRH	=	0xfece
                           00FECF   753 _PWMA_CNTRL	=	0xfecf
                           00FED0   754 _PWMA_PSCRH	=	0xfed0
                           00FED1   755 _PWMA_PSCRL	=	0xfed1
                           00FED2   756 _PWMA_ARRH	=	0xfed2
                           00FED3   757 _PWMA_ARRL	=	0xfed3
                           00FED4   758 _PWMA_RCR	=	0xfed4
                           00FED5   759 _PWMA_CCR1H	=	0xfed5
                           00FED6   760 _PWMA_CCR1L	=	0xfed6
                           00FED7   761 _PWMA_CCR2H	=	0xfed7
                           00FED8   762 _PWMA_CCR2L	=	0xfed8
                           00FED9   763 _PWMA_CCR3H	=	0xfed9
                           00FEDA   764 _PWMA_CCR3L	=	0xfeda
                           00FEDB   765 _PWMA_CCR4H	=	0xfedb
                           00FEDC   766 _PWMA_CCR4L	=	0xfedc
                           00FEDD   767 _PWMA_BKR	=	0xfedd
                           00FEDE   768 _PWMA_DTR	=	0xfede
                           00FEDF   769 _PWMA_OISR	=	0xfedf
                           00FEE0   770 _PWMB_CR1	=	0xfee0
                           00FEE1   771 _PWMB_CR2	=	0xfee1
                           00FEE2   772 _PWMB_SMCR	=	0xfee2
                           00FEE3   773 _PWMB_ETR	=	0xfee3
                           00FEE4   774 _PWMB_IER	=	0xfee4
                           00FEE5   775 _PWMB_SR1	=	0xfee5
                           00FEE6   776 _PWMB_SR2	=	0xfee6
                           00FEE7   777 _PWMB_EGR	=	0xfee7
                           00FEE8   778 _PWMB_CCMR1	=	0xfee8
                           00FEE9   779 _PWMB_CCMR2	=	0xfee9
                           00FEEA   780 _PWMB_CCMR3	=	0xfeea
                           00FEEB   781 _PWMB_CCMR4	=	0xfeeb
                           00FEEC   782 _PWMB_CCER1	=	0xfeec
                           00FEED   783 _PWMB_CCER2	=	0xfeed
                           00FEEE   784 _PWMB_CNTRH	=	0xfeee
                           00FEEF   785 _PWMB_CNTRL	=	0xfeef
                           00FEF0   786 _PWMB_PSCRH	=	0xfef0
                           00FEF1   787 _PWMB_PSCRL	=	0xfef1
                           00FEF2   788 _PWMB_ARRH	=	0xfef2
                           00FEF3   789 _PWMB_ARRL	=	0xfef3
                           00FEF4   790 _PWMB_RCR	=	0xfef4
                           00FEF5   791 _PWMB_CCR1H	=	0xfef5
                           00FEF6   792 _PWMB_CCR1L	=	0xfef6
                           00FEF7   793 _PWMB_CCR2H	=	0xfef7
                           00FEF8   794 _PWMB_CCR2L	=	0xfef8
                           00FEF9   795 _PWMB_CCR3H	=	0xfef9
                           00FEFA   796 _PWMB_CCR3L	=	0xfefa
                           00FEFB   797 _PWMB_CCR4H	=	0xfefb
                           00FEFC   798 _PWMB_CCR4L	=	0xfefc
                           00FEFD   799 _PWMB_BKR	=	0xfefd
                           00FEFE   800 _PWMB_DTR	=	0xfefe
                           00FEFF   801 _PWMB_OISR	=	0xfeff
                           00FE60   802 _RTCCR	=	0xfe60
                           00FE61   803 _RTCCFG	=	0xfe61
                           00FE62   804 _RTCIEN	=	0xfe62
                           00FE63   805 _RTCIF	=	0xfe63
                           00FE64   806 _ALAHOUR	=	0xfe64
                           00FE65   807 _ALAMIN	=	0xfe65
                           00FE66   808 _ALASEC	=	0xfe66
                           00FE67   809 _ALASSEC	=	0xfe67
                           00FE68   810 _INIYEAR	=	0xfe68
                           00FE69   811 _INIMONTH	=	0xfe69
                           00FE6A   812 _INIDAY	=	0xfe6a
                           00FE6B   813 _INIHOUR	=	0xfe6b
                           00FE6C   814 _INIMIN	=	0xfe6c
                           00FE6D   815 _INISEC	=	0xfe6d
                           00FE6E   816 _INISSEC	=	0xfe6e
                           00FE70   817 _YEAR	=	0xfe70
                           00FE71   818 _MONTH	=	0xfe71
                           00FE72   819 _DAY	=	0xfe72
                           00FE73   820 _HOUR	=	0xfe73
                           00FE74   821 _MIN	=	0xfe74
                           00FE75   822 _SEC	=	0xfe75
                           00FE76   823 _SSEC	=	0xfe76
                           00FA20   824 _DMA_SPI_CFG	=	0xfa20
                           00FA21   825 _DMA_SPI_CR	=	0xfa21
                           00FA22   826 _DMA_SPI_STA	=	0xfa22
                           00FA23   827 _DMA_SPI_AMT	=	0xfa23
                           00FA24   828 _DMA_SPI_DONE	=	0xfa24
                           00FA25   829 _DMA_SPI_TXAH	=	0xfa25
                           00FA26   830 _DMA_SPI_TXAL	=	0xfa26
                           00FA27   831 _DMA_SPI_RXAH	=	0xfa27
                           00FA28   832 _DMA_SPI_RXAL	=	0xfa28
                           00FA29   833 _DMA_SPI_CFG2	=	0xfa29
                           00FE01   834 _CLKDIV	=	0xfe01
                           00FE02   835 _HIRCCR	=	0xfe02
                           00FE03   836 _XOSCCR	=	0xfe03
                           00FE04   837 _IRC32KCR	=	0xfe04
                           00FE00   838 _CKSEL	=	0xfe00
                           00FE05   839 _MCLKOCR	=	0xfe05
                           00FE06   840 _IRCDB	=	0xfe06
                           00FE07   841 _IRC48MCR	=	0xfe07
                           00FEA2   842 _TM2PS	=	0xfea2
                           00FEA3   843 _TM3PS	=	0xfea3
                           00FEA4   844 _TM4PS	=	0xfea4
                           00FA30   845 _DMA_UR1T_CFG	=	0xfa30
                           00FA31   846 _DMA_UR1T_CR	=	0xfa31
                           00FA32   847 _DMA_UR1T_STA	=	0xfa32
                           00FA33   848 _DMA_URTX_AMT	=	0xfa33
                           00FA34   849 _DMA_UR1T_DONE	=	0xfa34
                           00FA35   850 _DMA_UR1T_TXAH	=	0xfa35
                           00FA36   851 _DMA_UR1T_TXAL	=	0xfa36
                           00FA38   852 _DMA_UR1R_CFG	=	0xfa38
                           00FA39   853 _DMA_UR1R_CR	=	0xfa39
                           00FA3A   854 _DMA_UR1R_STA	=	0xfa3a
                           00FA3B   855 _DMA_UR1R_AMT	=	0xfa3b
                           00FA3C   856 _DMA_UR1R_DONE	=	0xfa3c
                           00FA3D   857 _DMA_UR1R_TXAH	=	0xfa3d
                           00FA3E   858 _DMA_UR1R_TXAL	=	0xfa3e
                           00FA30   859 _DMA_UR2T_CFG	=	0xfa30
                           00FA31   860 _DMA_UR2T_CR	=	0xfa31
                           00FA32   861 _DMA_UR2T_STA	=	0xfa32
                           00FA33   862 _DMA_UR2T_AMT	=	0xfa33
                           00FA34   863 _DMA_UR2T_DONE	=	0xfa34
                           00FA35   864 _DMA_UR2T_TXAH	=	0xfa35
                           00FA36   865 _DMA_UR2T_TXAL	=	0xfa36
                           00FA38   866 _DMA_UR2R_CFG	=	0xfa38
                           00FA39   867 _DMA_UR2R_CR	=	0xfa39
                           00FA3A   868 _DMA_UR2R_STA	=	0xfa3a
                           00FA3B   869 _DMA_UR2R_AMT	=	0xfa3b
                           00FA3C   870 _DMA_UR2R_DONE	=	0xfa3c
                           00FA3D   871 _DMA_UR2R_TXAH	=	0xfa3d
                           00FA3E   872 _DMA_UR2R_TXAL	=	0xfa3e
                           00FA30   873 _DMA_UR3T_CFG	=	0xfa30
                           00FA31   874 _DMA_UR3T_CR	=	0xfa31
                           00FA32   875 _DMA_UR3T_STA	=	0xfa32
                           00FA33   876 _DMA_UR3T_AMT	=	0xfa33
                           00FA34   877 _DMA_UR3T_DONE	=	0xfa34
                           00FA35   878 _DMA_UR3T_TXAH	=	0xfa35
                           00FA36   879 _DMA_UR3T_TXAL	=	0xfa36
                           00FA38   880 _DMA_UR3R_CFG	=	0xfa38
                           00FA39   881 _DMA_UR3R_CR	=	0xfa39
                           00FA3A   882 _DMA_UR3R_STA	=	0xfa3a
                           00FA3B   883 _DMA_UR3R_AMT	=	0xfa3b
                           00FA3C   884 _DMA_UR3R_DONE	=	0xfa3c
                           00FA3D   885 _DMA_UR3R_TXAH	=	0xfa3d
                           00FA3E   886 _DMA_UR3R_TXAL	=	0xfa3e
                           00FA30   887 _DMA_UR4T_CFG	=	0xfa30
                           00FA31   888 _DMA_UR4T_CR	=	0xfa31
                           00FA32   889 _DMA_UR4T_STA	=	0xfa32
                           00FA33   890 _DMA_UR4T_AMT	=	0xfa33
                           00FA34   891 _DMA_UR4T_DONE	=	0xfa34
                           00FA35   892 _DMA_UR4T_TXAH	=	0xfa35
                           00FA36   893 _DMA_UR4T_TXAL	=	0xfa36
                           00FA38   894 _DMA_UR4R_CFG	=	0xfa38
                           00FA39   895 _DMA_UR4R_CR	=	0xfa39
                           00FA3A   896 _DMA_UR4R_STA	=	0xfa3a
                           00FA3B   897 _DMA_UR4R_AMT	=	0xfa3b
                           00FA3C   898 _DMA_UR4R_DONE	=	0xfa3c
                           00FA3D   899 _DMA_UR4R_TXAH	=	0xfa3d
                           00FA3E   900 _DMA_UR4R_TXAL	=	0xfa3e
      000000                        901 _uartGetCharacter_result_10000_50:
      000000                        902 	.ds 1
      000001                        903 _fifoClear_buffer_10000_84:
      000001                        904 	.ds 3
      000004                        905 _fifoIsFull_fifo_10000_86:
      000004                        906 	.ds 3
      000007                        907 _fifoBytesFree_fifo_10000_91:
      000007                        908 	.ds 3
                                    909 ;--------------------------------------------------------
                                    910 ; absolute external ram data
                                    911 ;--------------------------------------------------------
                                    912 	.area XABS    (ABS,XDATA)
                                    913 ;--------------------------------------------------------
                                    914 ; initialized external ram data
                                    915 ;--------------------------------------------------------
                                    916 	.area XISEG   (XDATA)
                                    917 	.area HOME    (CODE)
                                    918 	.area GSINIT0 (CODE)
                                    919 	.area GSINIT1 (CODE)
                                    920 	.area GSINIT2 (CODE)
                                    921 	.area GSINIT3 (CODE)
                                    922 	.area GSINIT4 (CODE)
                                    923 	.area GSINIT5 (CODE)
                                    924 	.area GSINIT  (CODE)
                                    925 	.area GSFINAL (CODE)
                                    926 	.area CSEG    (CODE)
                                    927 ;--------------------------------------------------------
                                    928 ; global & static initialisations
                                    929 ;--------------------------------------------------------
                                    930 	.area HOME    (CODE)
                                    931 	.area GSINIT  (CODE)
                                    932 	.area GSFINAL (CODE)
                                    933 	.area GSINIT  (CODE)
                                    934 ;--------------------------------------------------------
                                    935 ; Home
                                    936 ;--------------------------------------------------------
                                    937 	.area HOME    (CODE)
                                    938 	.area HOME    (CODE)
                                    939 ;--------------------------------------------------------
                                    940 ; code
                                    941 ;--------------------------------------------------------
                                    942 	.area CSEG    (CODE)
                                    943 ;------------------------------------------------------------
                                    944 ;Allocation info for local variables in function 'fifoClear'
                                    945 ;------------------------------------------------------------
                                    946 ;buffer                    Allocated with name '_fifoClear_buffer_10000_84'
                                    947 ;------------------------------------------------------------
                                    948 ;	/Users/ambadran717/.stc/uni-stc/hal/fifo-buffer.c:39: void fifoClear(FifoState *buffer) {
                                    949 ;	-----------------------------------------
                                    950 ;	 function fifoClear
                                    951 ;	-----------------------------------------
      000000                        952 _fifoClear:
                           000007   953 	ar7 = 0x07
                           000006   954 	ar6 = 0x06
                           000005   955 	ar5 = 0x05
                           000004   956 	ar4 = 0x04
                           000003   957 	ar3 = 0x03
                           000002   958 	ar2 = 0x02
                           000001   959 	ar1 = 0x01
                           000000   960 	ar0 = 0x00
      000000 AF F0            [24]  961 	mov	r7,b
      000002 AE 83            [24]  962 	mov	r6,dph
      000004 E5 82            [12]  963 	mov	a,dpl
      000006 90r00r01         [24]  964 	mov	dptr,#_fifoClear_buffer_10000_84
      000009 F0               [24]  965 	movx	@dptr,a
      00000A EE               [12]  966 	mov	a,r6
      00000B A3               [24]  967 	inc	dptr
      00000C F0               [24]  968 	movx	@dptr,a
      00000D EF               [12]  969 	mov	a,r7
      00000E A3               [24]  970 	inc	dptr
      00000F F0               [24]  971 	movx	@dptr,a
                                    972 ;	/Users/ambadran717/.stc/uni-stc/hal/fifo-buffer.c:40: buffer->length = 0;
      000010 90r00r01         [24]  973 	mov	dptr,#_fifoClear_buffer_10000_84
      000013 E0               [24]  974 	movx	a,@dptr
      000014 FD               [12]  975 	mov	r5,a
      000015 A3               [24]  976 	inc	dptr
      000016 E0               [24]  977 	movx	a,@dptr
      000017 FE               [12]  978 	mov	r6,a
      000018 A3               [24]  979 	inc	dptr
      000019 E0               [24]  980 	movx	a,@dptr
      00001A FF               [12]  981 	mov	r7,a
      00001B 74 01            [12]  982 	mov	a,#0x01
      00001D 2D               [12]  983 	add	a, r5
      00001E FA               [12]  984 	mov	r2,a
      00001F E4               [12]  985 	clr	a
      000020 3E               [12]  986 	addc	a, r6
      000021 FB               [12]  987 	mov	r3,a
      000022 8F 04            [24]  988 	mov	ar4,r7
      000024 8A 82            [24]  989 	mov	dpl,r2
      000026 8B 83            [24]  990 	mov	dph,r3
      000028 8C F0            [24]  991 	mov	b,r4
      00002A E4               [12]  992 	clr	a
      00002B 12r00r00         [24]  993 	lcall	__gptrput
                                    994 ;	/Users/ambadran717/.stc/uni-stc/hal/fifo-buffer.c:41: buffer->rIndex = 0;
      00002E 74 02            [12]  995 	mov	a,#0x02
      000030 2D               [12]  996 	add	a, r5
      000031 FA               [12]  997 	mov	r2,a
      000032 E4               [12]  998 	clr	a
      000033 3E               [12]  999 	addc	a, r6
      000034 FB               [12] 1000 	mov	r3,a
      000035 8F 04            [24] 1001 	mov	ar4,r7
      000037 8A 82            [24] 1002 	mov	dpl,r2
      000039 8B 83            [24] 1003 	mov	dph,r3
      00003B 8C F0            [24] 1004 	mov	b,r4
      00003D E4               [12] 1005 	clr	a
      00003E 12r00r00         [24] 1006 	lcall	__gptrput
                                   1007 ;	/Users/ambadran717/.stc/uni-stc/hal/fifo-buffer.c:42: buffer->wIndex = 0;
      000041 74 03            [12] 1008 	mov	a,#0x03
      000043 2D               [12] 1009 	add	a, r5
      000044 FA               [12] 1010 	mov	r2,a
      000045 E4               [12] 1011 	clr	a
      000046 3E               [12] 1012 	addc	a, r6
      000047 FB               [12] 1013 	mov	r3,a
      000048 8F 04            [24] 1014 	mov	ar4,r7
      00004A 8A 82            [24] 1015 	mov	dpl,r2
      00004C 8B 83            [24] 1016 	mov	dph,r3
      00004E 8C F0            [24] 1017 	mov	b,r4
      000050 E4               [12] 1018 	clr	a
      000051 12r00r00         [24] 1019 	lcall	__gptrput
                                   1020 ;	/Users/ambadran717/.stc/uni-stc/hal/fifo-buffer.c:43: buffer->status = 0;
      000054 74 04            [12] 1021 	mov	a,#0x04
      000056 2D               [12] 1022 	add	a, r5
      000057 FD               [12] 1023 	mov	r5,a
      000058 E4               [12] 1024 	clr	a
      000059 3E               [12] 1025 	addc	a, r6
      00005A FE               [12] 1026 	mov	r6,a
      00005B 8D 82            [24] 1027 	mov	dpl,r5
      00005D 8E 83            [24] 1028 	mov	dph,r6
      00005F 8F F0            [24] 1029 	mov	b,r7
      000061 E4               [12] 1030 	clr	a
                                   1031 ;	/Users/ambadran717/.stc/uni-stc/hal/fifo-buffer.c:44: }
      000062 02r00r00         [24] 1032 	ljmp	__gptrput
                                   1033 ;------------------------------------------------------------
                                   1034 ;Allocation info for local variables in function 'fifoIsFull'
                                   1035 ;------------------------------------------------------------
                                   1036 ;fifo                      Allocated with name '_fifoIsFull_fifo_10000_86'
                                   1037 ;__200000007               Allocated with name '_fifoIsFull___200000007_20000_87'
                                   1038 ;__200000008               Allocated with name '_fifoIsFull___200000008_20000_88'
                                   1039 ;buffer                    Allocated with name '_fifoIsFull_buffer_30000_89'
                                   1040 ;------------------------------------------------------------
                                   1041 ;	/Users/ambadran717/.stc/uni-stc/hal/fifo-buffer.c:46: bool fifoIsFull(FifoState *fifo) {
                                   1042 ;	-----------------------------------------
                                   1043 ;	 function fifoIsFull
                                   1044 ;	-----------------------------------------
      000065                       1045 _fifoIsFull:
      000065 AF F0            [24] 1046 	mov	r7,b
      000067 AE 83            [24] 1047 	mov	r6,dph
      000069 E5 82            [12] 1048 	mov	a,dpl
      00006B 90r00r04         [24] 1049 	mov	dptr,#_fifoIsFull_fifo_10000_86
      00006E F0               [24] 1050 	movx	@dptr,a
      00006F EE               [12] 1051 	mov	a,r6
      000070 A3               [24] 1052 	inc	dptr
      000071 F0               [24] 1053 	movx	@dptr,a
      000072 EF               [12] 1054 	mov	a,r7
      000073 A3               [24] 1055 	inc	dptr
      000074 F0               [24] 1056 	movx	@dptr,a
                                   1057 ;	/Users/ambadran717/.stc/uni-stc/hal/fifo-buffer.c:47: return fifoLength(fifo) == fifo->size;
      000075 90r00r04         [24] 1058 	mov	dptr,#_fifoIsFull_fifo_10000_86
      000078 E0               [24] 1059 	movx	a,@dptr
      000079 FD               [12] 1060 	mov	r5,a
      00007A A3               [24] 1061 	inc	dptr
      00007B E0               [24] 1062 	movx	a,@dptr
      00007C FE               [12] 1063 	mov	r6,a
      00007D A3               [24] 1064 	inc	dptr
      00007E E0               [24] 1065 	movx	a,@dptr
      00007F FF               [12] 1066 	mov	r7,a
                                   1067 ;	/Users/ambadran717/.stc/uni-stc/hal/fifo-buffer.h:78: return buffer->length;
      000080 74 01            [12] 1068 	mov	a,#0x01
      000082 2D               [12] 1069 	add	a, r5
      000083 FA               [12] 1070 	mov	r2,a
      000084 E4               [12] 1071 	clr	a
      000085 3E               [12] 1072 	addc	a, r6
      000086 FB               [12] 1073 	mov	r3,a
      000087 8F 04            [24] 1074 	mov	ar4,r7
      000089 8A 82            [24] 1075 	mov	dpl,r2
      00008B 8B 83            [24] 1076 	mov	dph,r3
      00008D 8C F0            [24] 1077 	mov	b,r4
      00008F 12r00r00         [24] 1078 	lcall	__gptrget
      000092 FA               [12] 1079 	mov	r2,a
                                   1080 ;	/Users/ambadran717/.stc/uni-stc/hal/fifo-buffer.c:47: return fifoLength(fifo) == fifo->size;
      000093 8D 82            [24] 1081 	mov	dpl,r5
      000095 8E 83            [24] 1082 	mov	dph,r6
      000097 8F F0            [24] 1083 	mov	b,r7
      000099 12r00r00         [24] 1084 	lcall	__gptrget
      00009C FD               [12] 1085 	mov	r5,a
      00009D EA               [12] 1086 	mov	a,r2
      00009E B5 05 03         [24] 1087 	cjne	a,ar5,00104$
      0000A1 D3               [12] 1088 	setb	c
      0000A2 80 01            [24] 1089 	sjmp	00105$
      0000A4                       1090 00104$:
      0000A4 C3               [12] 1091 	clr	c
      0000A5                       1092 00105$:
      0000A5 92*00            [24] 1093 	mov  _fifoIsFull_sloc0_1_0,c
      0000A7 E4               [12] 1094 	clr	a
      0000A8 33               [12] 1095 	rlc	a
      0000A9 F5 82            [12] 1096 	mov	dpl, a
                                   1097 ;	/Users/ambadran717/.stc/uni-stc/hal/fifo-buffer.c:48: }
      0000AB 22               [24] 1098 	ret
                                   1099 ;------------------------------------------------------------
                                   1100 ;Allocation info for local variables in function 'fifoBytesFree'
                                   1101 ;------------------------------------------------------------
                                   1102 ;fifo                      Allocated with name '_fifoBytesFree_fifo_10000_91'
                                   1103 ;__200000010               Allocated with name '_fifoBytesFree___200000010_20000_92'
                                   1104 ;__200000011               Allocated with name '_fifoBytesFree___200000011_20000_93'
                                   1105 ;buffer                    Allocated with name '_fifoBytesFree_buffer_30000_94'
                                   1106 ;------------------------------------------------------------
                                   1107 ;	/Users/ambadran717/.stc/uni-stc/hal/fifo-buffer.c:50: uint8_t fifoBytesFree(FifoState *fifo) {
                                   1108 ;	-----------------------------------------
                                   1109 ;	 function fifoBytesFree
                                   1110 ;	-----------------------------------------
      0000AC                       1111 _fifoBytesFree:
      0000AC AF F0            [24] 1112 	mov	r7,b
      0000AE AE 83            [24] 1113 	mov	r6,dph
      0000B0 E5 82            [12] 1114 	mov	a,dpl
      0000B2 90r00r07         [24] 1115 	mov	dptr,#_fifoBytesFree_fifo_10000_91
      0000B5 F0               [24] 1116 	movx	@dptr,a
      0000B6 EE               [12] 1117 	mov	a,r6
      0000B7 A3               [24] 1118 	inc	dptr
      0000B8 F0               [24] 1119 	movx	@dptr,a
      0000B9 EF               [12] 1120 	mov	a,r7
      0000BA A3               [24] 1121 	inc	dptr
      0000BB F0               [24] 1122 	movx	@dptr,a
                                   1123 ;	/Users/ambadran717/.stc/uni-stc/hal/fifo-buffer.c:51: return fifo->size - fifoLength(fifo);
      0000BC 90r00r07         [24] 1124 	mov	dptr,#_fifoBytesFree_fifo_10000_91
      0000BF E0               [24] 1125 	movx	a,@dptr
      0000C0 FD               [12] 1126 	mov	r5,a
      0000C1 A3               [24] 1127 	inc	dptr
      0000C2 E0               [24] 1128 	movx	a,@dptr
      0000C3 FE               [12] 1129 	mov	r6,a
      0000C4 A3               [24] 1130 	inc	dptr
      0000C5 E0               [24] 1131 	movx	a,@dptr
      0000C6 FF               [12] 1132 	mov	r7,a
      0000C7 8D 82            [24] 1133 	mov	dpl,r5
      0000C9 8E 83            [24] 1134 	mov	dph,r6
      0000CB 8F F0            [24] 1135 	mov	b,r7
      0000CD 12r00r00         [24] 1136 	lcall	__gptrget
      0000D0 FC               [12] 1137 	mov	r4,a
                                   1138 ;	/Users/ambadran717/.stc/uni-stc/hal/fifo-buffer.h:78: return buffer->length;
      0000D1 0D               [12] 1139 	inc	r5
      0000D2 BD 00 01         [24] 1140 	cjne	r5,#0x00,00104$
      0000D5 0E               [12] 1141 	inc	r6
      0000D6                       1142 00104$:
      0000D6 8D 82            [24] 1143 	mov	dpl,r5
      0000D8 8E 83            [24] 1144 	mov	dph,r6
      0000DA 8F F0            [24] 1145 	mov	b,r7
      0000DC 12r00r00         [24] 1146 	lcall	__gptrget
      0000DF FD               [12] 1147 	mov	r5,a
                                   1148 ;	/Users/ambadran717/.stc/uni-stc/hal/fifo-buffer.c:51: return fifo->size - fifoLength(fifo);
      0000E0 EC               [12] 1149 	mov	a,r4
      0000E1 C3               [12] 1150 	clr	c
      0000E2 9D               [12] 1151 	subb	a,r5
                                   1152 ;	/Users/ambadran717/.stc/uni-stc/hal/fifo-buffer.c:52: }
      0000E3 F5 82            [12] 1153 	mov	dpl,a
      0000E5 22               [24] 1154 	ret
                                   1155 ;------------------------------------------------------------
                                   1156 ;Allocation info for local variables in function 'fifoWrite'
                                   1157 ;------------------------------------------------------------
                                   1158 ;data                      Allocated to stack - _bp -5 +3 
                                   1159 ;count                     Allocated to stack - _bp -6 +1 
                                   1160 ;buffer                    Allocated to stack - _bp +1 +3 
                                   1161 ;rc                        Allocated to registers r4 
                                   1162 ;wIndex                    Allocated to stack - _bp +10 +1 
                                   1163 ;n                         Allocated to stack - _bp +11 +1 
                                   1164 ;sloc0                     Allocated to stack - _bp +4 +3 
                                   1165 ;sloc1                     Allocated to stack - _bp +7 +3 
                                   1166 ;------------------------------------------------------------
                                   1167 ;	/Users/ambadran717/.stc/uni-stc/hal/fifo-buffer.c:64: bool fifoWrite(FifoState *buffer, const void *data, uint8_t count) REENTRANT {
                                   1168 ;	-----------------------------------------
                                   1169 ;	 function fifoWrite
                                   1170 ;	-----------------------------------------
      0000E6                       1171 _fifoWrite:
      0000E6 C0*00            [24] 1172 	push	_bp
      0000E8 85 81*00         [24] 1173 	mov	_bp,sp
      0000EB C0 82            [24] 1174 	push	dpl
      0000ED C0 83            [24] 1175 	push	dph
      0000EF C0 F0            [24] 1176 	push	b
      0000F1 E5 81            [12] 1177 	mov	a,sp
      0000F3 24 08            [12] 1178 	add	a,#0x08
      0000F5 F5 81            [12] 1179 	mov	sp,a
                                   1180 ;	/Users/ambadran717/.stc/uni-stc/hal/fifo-buffer.c:65: bool rc = fifoBytesFree(buffer) >= count;
      0000F7 A8*00            [24] 1181 	mov	r0,_bp
      0000F9 08               [12] 1182 	inc	r0
      0000FA 86 82            [24] 1183 	mov	dpl, @r0
      0000FC 08               [12] 1184 	inc	r0
      0000FD 86 83            [24] 1185 	mov	dph, @r0
      0000FF 08               [12] 1186 	inc	r0
      000100 86 F0            [24] 1187 	mov	b, @r0
      000102 12r00rAC         [24] 1188 	lcall	_fifoBytesFree
      000105 AC 82            [24] 1189 	mov	r4, dpl
      000107 E5*00            [12] 1190 	mov	a,_bp
      000109 24 FA            [12] 1191 	add	a,#0xfa
      00010B F8               [12] 1192 	mov	r0,a
      00010C C3               [12] 1193 	clr	c
      00010D EC               [12] 1194 	mov	a,r4
      00010E 96               [12] 1195 	subb	a,@r0
      00010F B3               [12] 1196 	cpl	c
      000110 92*00            [24] 1197 	mov	b0,c
      000112 E4               [12] 1198 	clr	a
      000113 33               [12] 1199 	rlc	a
      000114 FC               [12] 1200 	mov	r4,a
                                   1201 ;	/Users/ambadran717/.stc/uni-stc/hal/fifo-buffer.c:67: if (rc) {
      000115 20*00 03         [24] 1202 	jb	b0,00136$
      000118 02r02r3E         [24] 1203 	ljmp	00105$
      00011B                       1204 00136$:
                                   1205 ;	/Users/ambadran717/.stc/uni-stc/hal/fifo-buffer.c:68: uint8_t wIndex = buffer->wIndex;
      00011B A8*00            [24] 1206 	mov	r0,_bp
      00011D 08               [12] 1207 	inc	r0
      00011E E5*00            [12] 1208 	mov	a,_bp
      000120 24 04            [12] 1209 	add	a,#0x04
      000122 F9               [12] 1210 	mov	r1,a
      000123 74 03            [12] 1211 	mov	a,#0x03
      000125 26               [12] 1212 	add	a, @r0
      000126 F7               [12] 1213 	mov	@r1,a
      000127 E4               [12] 1214 	clr	a
      000128 08               [12] 1215 	inc	r0
      000129 36               [12] 1216 	addc	a, @r0
      00012A 09               [12] 1217 	inc	r1
      00012B F7               [12] 1218 	mov	@r1,a
      00012C 08               [12] 1219 	inc	r0
      00012D E6               [12] 1220 	mov	a,@r0
      00012E 09               [12] 1221 	inc	r1
      00012F F7               [12] 1222 	mov	@r1,a
      000130 E5*00            [12] 1223 	mov	a,_bp
      000132 24 04            [12] 1224 	add	a,#0x04
      000134 F8               [12] 1225 	mov	r0,a
      000135 86 82            [24] 1226 	mov	dpl,@r0
      000137 08               [12] 1227 	inc	r0
      000138 86 83            [24] 1228 	mov	dph,@r0
      00013A 08               [12] 1229 	inc	r0
      00013B 86 F0            [24] 1230 	mov	b,@r0
      00013D E5*00            [12] 1231 	mov	a,_bp
      00013F 24 0A            [12] 1232 	add	a,#0x0a
      000141 F9               [12] 1233 	mov	r1,a
      000142 12r00r00         [24] 1234 	lcall	__gptrget
      000145 F7               [12] 1235 	mov	@r1,a
                                   1236 ;	/Users/ambadran717/.stc/uni-stc/hal/fifo-buffer.c:70: for (uint8_t n = 0; n < count; n++) {
      000146 A8*00            [24] 1237 	mov	r0,_bp
      000148 08               [12] 1238 	inc	r0
      000149 E5*00            [12] 1239 	mov	a,_bp
      00014B 24 07            [12] 1240 	add	a,#0x07
      00014D F9               [12] 1241 	mov	r1,a
      00014E 74 05            [12] 1242 	mov	a,#0x05
      000150 26               [12] 1243 	add	a, @r0
      000151 F7               [12] 1244 	mov	@r1,a
      000152 E4               [12] 1245 	clr	a
      000153 08               [12] 1246 	inc	r0
      000154 36               [12] 1247 	addc	a, @r0
      000155 09               [12] 1248 	inc	r1
      000156 F7               [12] 1249 	mov	@r1,a
      000157 08               [12] 1250 	inc	r0
      000158 E6               [12] 1251 	mov	a,@r0
      000159 09               [12] 1252 	inc	r1
      00015A F7               [12] 1253 	mov	@r1,a
      00015B E5*00            [12] 1254 	mov	a,_bp
      00015D 24 0B            [12] 1255 	add	a,#0x0b
      00015F F8               [12] 1256 	mov	r0,a
      000160 76 00            [12] 1257 	mov	@r0,#0x00
      000162                       1258 00107$:
      000162 E5*00            [12] 1259 	mov	a,_bp
      000164 24 0B            [12] 1260 	add	a,#0x0b
      000166 F8               [12] 1261 	mov	r0,a
      000167 E5*00            [12] 1262 	mov	a,_bp
      000169 24 FA            [12] 1263 	add	a,#0xfa
      00016B F9               [12] 1264 	mov	r1,a
      00016C C3               [12] 1265 	clr	c
      00016D E6               [12] 1266 	mov	a,@r0
      00016E 97               [12] 1267 	subb	a,@r1
      00016F 40 03            [24] 1268 	jc	00137$
      000171 02r02r00         [24] 1269 	ljmp	00103$
      000174                       1270 00137$:
                                   1271 ;	/Users/ambadran717/.stc/uni-stc/hal/fifo-buffer.c:71: if (wIndex == buffer->size) {
      000174 C0 04            [24] 1272 	push	ar4
      000176 A8*00            [24] 1273 	mov	r0,_bp
      000178 08               [12] 1274 	inc	r0
      000179 86 82            [24] 1275 	mov	dpl,@r0
      00017B 08               [12] 1276 	inc	r0
      00017C 86 83            [24] 1277 	mov	dph,@r0
      00017E 08               [12] 1278 	inc	r0
      00017F 86 F0            [24] 1279 	mov	b,@r0
      000181 12r00r00         [24] 1280 	lcall	__gptrget
      000184 FC               [12] 1281 	mov	r4,a
      000185 E5*00            [12] 1282 	mov	a,_bp
      000187 24 0A            [12] 1283 	add	a,#0x0a
      000189 F8               [12] 1284 	mov	r0,a
      00018A E6               [12] 1285 	mov	a,@r0
      00018B B5 04 02         [24] 1286 	cjne	a,ar4,00138$
      00018E 80 04            [24] 1287 	sjmp	00139$
      000190                       1288 00138$:
      000190 D0 04            [24] 1289 	pop	ar4
      000192 80 09            [24] 1290 	sjmp	00102$
      000194                       1291 00139$:
      000194 D0 04            [24] 1292 	pop	ar4
                                   1293 ;	/Users/ambadran717/.stc/uni-stc/hal/fifo-buffer.c:72: wIndex = 0;
      000196 E5*00            [12] 1294 	mov	a,_bp
      000198 24 0A            [12] 1295 	add	a,#0x0a
      00019A F8               [12] 1296 	mov	r0,a
      00019B 76 00            [12] 1297 	mov	@r0,#0x00
      00019D                       1298 00102$:
                                   1299 ;	/Users/ambadran717/.stc/uni-stc/hal/fifo-buffer.c:75: buffer->data[wIndex] = ((const uint8_t *) data)[n];
      00019D C0 04            [24] 1300 	push	ar4
      00019F E5*00            [12] 1301 	mov	a,_bp
      0001A1 24 07            [12] 1302 	add	a,#0x07
      0001A3 F8               [12] 1303 	mov	r0,a
      0001A4 86 82            [24] 1304 	mov	dpl,@r0
      0001A6 08               [12] 1305 	inc	r0
      0001A7 86 83            [24] 1306 	mov	dph,@r0
      0001A9 08               [12] 1307 	inc	r0
      0001AA 86 F0            [24] 1308 	mov	b,@r0
      0001AC 12r00r00         [24] 1309 	lcall	__gptrget
      0001AF FA               [12] 1310 	mov	r2,a
      0001B0 A3               [24] 1311 	inc	dptr
      0001B1 12r00r00         [24] 1312 	lcall	__gptrget
      0001B4 FB               [12] 1313 	mov	r3,a
      0001B5 A3               [24] 1314 	inc	dptr
      0001B6 12r00r00         [24] 1315 	lcall	__gptrget
      0001B9 FC               [12] 1316 	mov	r4,a
      0001BA E5*00            [12] 1317 	mov	a,_bp
      0001BC 24 0A            [12] 1318 	add	a,#0x0a
      0001BE F8               [12] 1319 	mov	r0,a
      0001BF E6               [12] 1320 	mov	a,@r0
      0001C0 2A               [12] 1321 	add	a, r2
      0001C1 FA               [12] 1322 	mov	r2,a
      0001C2 E4               [12] 1323 	clr	a
      0001C3 3B               [12] 1324 	addc	a, r3
      0001C4 FB               [12] 1325 	mov	r3,a
      0001C5 E5*00            [12] 1326 	mov	a,_bp
      0001C7 24 FB            [12] 1327 	add	a,#0xfb
      0001C9 F8               [12] 1328 	mov	r0,a
      0001CA 86 05            [24] 1329 	mov	ar5,@r0
      0001CC 08               [12] 1330 	inc	r0
      0001CD 86 06            [24] 1331 	mov	ar6,@r0
      0001CF 08               [12] 1332 	inc	r0
      0001D0 86 07            [24] 1333 	mov	ar7,@r0
      0001D2 E5*00            [12] 1334 	mov	a,_bp
      0001D4 24 0B            [12] 1335 	add	a,#0x0b
      0001D6 F8               [12] 1336 	mov	r0,a
      0001D7 E6               [12] 1337 	mov	a,@r0
      0001D8 2D               [12] 1338 	add	a, r5
      0001D9 FD               [12] 1339 	mov	r5,a
      0001DA E4               [12] 1340 	clr	a
      0001DB 3E               [12] 1341 	addc	a, r6
      0001DC FE               [12] 1342 	mov	r6,a
      0001DD 8D 82            [24] 1343 	mov	dpl,r5
      0001DF 8E 83            [24] 1344 	mov	dph,r6
      0001E1 8F F0            [24] 1345 	mov	b,r7
      0001E3 12r00r00         [24] 1346 	lcall	__gptrget
      0001E6 8A 82            [24] 1347 	mov	dpl,r2
      0001E8 8B 83            [24] 1348 	mov	dph,r3
      0001EA 8C F0            [24] 1349 	mov	b,r4
      0001EC 12r00r00         [24] 1350 	lcall	__gptrput
                                   1351 ;	/Users/ambadran717/.stc/uni-stc/hal/fifo-buffer.c:76: wIndex++;
      0001EF E5*00            [12] 1352 	mov	a,_bp
      0001F1 24 0A            [12] 1353 	add	a,#0x0a
      0001F3 F8               [12] 1354 	mov	r0,a
      0001F4 06               [12] 1355 	inc	@r0
                                   1356 ;	/Users/ambadran717/.stc/uni-stc/hal/fifo-buffer.c:70: for (uint8_t n = 0; n < count; n++) {
      0001F5 E5*00            [12] 1357 	mov	a,_bp
      0001F7 24 0B            [12] 1358 	add	a,#0x0b
      0001F9 F8               [12] 1359 	mov	r0,a
      0001FA 06               [12] 1360 	inc	@r0
      0001FB D0 04            [24] 1361 	pop	ar4
      0001FD 02r01r62         [24] 1362 	ljmp	00107$
      000200                       1363 00103$:
                                   1364 ;	/Users/ambadran717/.stc/uni-stc/hal/fifo-buffer.c:79: buffer->wIndex = wIndex;
      000200 E5*00            [12] 1365 	mov	a,_bp
      000202 24 04            [12] 1366 	add	a,#0x04
      000204 F8               [12] 1367 	mov	r0,a
      000205 86 82            [24] 1368 	mov	dpl,@r0
      000207 08               [12] 1369 	inc	r0
      000208 86 83            [24] 1370 	mov	dph,@r0
      00020A 08               [12] 1371 	inc	r0
      00020B 86 F0            [24] 1372 	mov	b,@r0
      00020D E5*00            [12] 1373 	mov	a,_bp
      00020F 24 0A            [12] 1374 	add	a,#0x0a
      000211 F9               [12] 1375 	mov	r1,a
      000212 E7               [12] 1376 	mov	a,@r1
      000213 12r00r00         [24] 1377 	lcall	__gptrput
                                   1378 ;	/Users/ambadran717/.stc/uni-stc/hal/fifo-buffer.c:80: buffer->length += count;
      000216 A8*00            [24] 1379 	mov	r0,_bp
      000218 08               [12] 1380 	inc	r0
      000219 74 01            [12] 1381 	mov	a,#0x01
      00021B 26               [12] 1382 	add	a, @r0
      00021C FD               [12] 1383 	mov	r5,a
      00021D E4               [12] 1384 	clr	a
      00021E 08               [12] 1385 	inc	r0
      00021F 36               [12] 1386 	addc	a, @r0
      000220 FE               [12] 1387 	mov	r6,a
      000221 08               [12] 1388 	inc	r0
      000222 86 07            [24] 1389 	mov	ar7,@r0
      000224 8D 82            [24] 1390 	mov	dpl,r5
      000226 8E 83            [24] 1391 	mov	dph,r6
      000228 8F F0            [24] 1392 	mov	b,r7
      00022A 12r00r00         [24] 1393 	lcall	__gptrget
      00022D FB               [12] 1394 	mov	r3,a
      00022E E5*00            [12] 1395 	mov	a,_bp
      000230 24 FA            [12] 1396 	add	a,#0xfa
      000232 F8               [12] 1397 	mov	r0,a
      000233 E6               [12] 1398 	mov	a,@r0
      000234 2B               [12] 1399 	add	a, r3
      000235 8D 82            [24] 1400 	mov	dpl,r5
      000237 8E 83            [24] 1401 	mov	dph,r6
      000239 8F F0            [24] 1402 	mov	b,r7
      00023B 12r00r00         [24] 1403 	lcall	__gptrput
      00023E                       1404 00105$:
                                   1405 ;	/Users/ambadran717/.stc/uni-stc/hal/fifo-buffer.c:83: return rc;
      00023E 8C 82            [24] 1406 	mov	dpl, r4
                                   1407 ;	/Users/ambadran717/.stc/uni-stc/hal/fifo-buffer.c:84: }
      000240 85*00 81         [24] 1408 	mov	sp,_bp
      000243 D0*00            [24] 1409 	pop	_bp
      000245 22               [24] 1410 	ret
                                   1411 ;------------------------------------------------------------
                                   1412 ;Allocation info for local variables in function 'fifoRead'
                                   1413 ;------------------------------------------------------------
                                   1414 ;data                      Allocated to stack - _bp -5 +3 
                                   1415 ;count                     Allocated to stack - _bp -6 +1 
                                   1416 ;buffer                    Allocated to stack - _bp +1 +3 
                                   1417 ;__200000013               Allocated to registers r7 
                                   1418 ;rc                        Allocated to stack - _bp +4 +1 
                                   1419 ;__200000014               Allocated to registers 
                                   1420 ;buffer                    Allocated to registers 
                                   1421 ;rIndex                    Allocated to stack - _bp +11 +1 
                                   1422 ;n                         Allocated to stack - _bp +12 +1 
                                   1423 ;sloc0                     Allocated to stack - _bp +4 +1 
                                   1424 ;sloc1                     Allocated to stack - _bp +5 +3 
                                   1425 ;sloc2                     Allocated to stack - _bp +8 +3 
                                   1426 ;------------------------------------------------------------
                                   1427 ;	/Users/ambadran717/.stc/uni-stc/hal/fifo-buffer.c:86: bool fifoRead(FifoState *buffer, void *data, uint8_t count) REENTRANT {
                                   1428 ;	-----------------------------------------
                                   1429 ;	 function fifoRead
                                   1430 ;	-----------------------------------------
      000246                       1431 _fifoRead:
      000246 C0*00            [24] 1432 	push	_bp
      000248 85 81*00         [24] 1433 	mov	_bp,sp
      00024B C0 82            [24] 1434 	push	dpl
      00024D C0 83            [24] 1435 	push	dph
      00024F C0 F0            [24] 1436 	push	b
      000251 E5 81            [12] 1437 	mov	a,sp
      000253 24 09            [12] 1438 	add	a,#0x09
      000255 F5 81            [12] 1439 	mov	sp,a
                                   1440 ;	/Users/ambadran717/.stc/uni-stc/hal/fifo-buffer.c:87: bool rc = fifoLength(buffer) >= count;
      000257 A8*00            [24] 1441 	mov	r0,_bp
      000259 08               [12] 1442 	inc	r0
      00025A 74 01            [12] 1443 	mov	a,#0x01
      00025C 26               [12] 1444 	add	a, @r0
      00025D FA               [12] 1445 	mov	r2,a
      00025E E4               [12] 1446 	clr	a
      00025F 08               [12] 1447 	inc	r0
      000260 36               [12] 1448 	addc	a, @r0
      000261 FB               [12] 1449 	mov	r3,a
      000262 08               [12] 1450 	inc	r0
      000263 86 04            [24] 1451 	mov	ar4,@r0
      000265 8A 82            [24] 1452 	mov	dpl,r2
      000267 8B 83            [24] 1453 	mov	dph,r3
      000269 8C F0            [24] 1454 	mov	b,r4
      00026B 12r00r00         [24] 1455 	lcall	__gptrget
      00026E FF               [12] 1456 	mov	r7,a
      00026F E5*00            [12] 1457 	mov	a,_bp
      000271 24 FA            [12] 1458 	add	a,#0xfa
      000273 F8               [12] 1459 	mov	r0,a
      000274 C3               [12] 1460 	clr	c
      000275 EF               [12] 1461 	mov	a,r7
      000276 96               [12] 1462 	subb	a,@r0
      000277 B3               [12] 1463 	cpl	c
      000278 92*00            [24] 1464 	mov	b0,c
      00027A E5*00            [12] 1465 	mov	a,_bp
      00027C 24 04            [12] 1466 	add	a,#0x04
      00027E F8               [12] 1467 	mov	r0,a
      00027F A2*00            [12] 1468 	mov	c,b0
      000281 E4               [12] 1469 	clr	a
      000282 33               [12] 1470 	rlc	a
      000283 F6               [12] 1471 	mov	@r0,a
                                   1472 ;	/Users/ambadran717/.stc/uni-stc/hal/fifo-buffer.c:89: if (rc) {
      000284 20*00 03         [24] 1473 	jb	b0,00137$
      000287 02r03r9E         [24] 1474 	ljmp	00105$
      00028A                       1475 00137$:
                                   1476 ;	/Users/ambadran717/.stc/uni-stc/hal/fifo-buffer.c:90: uint8_t rIndex = buffer->rIndex;
      00028A A8*00            [24] 1477 	mov	r0,_bp
      00028C 08               [12] 1478 	inc	r0
      00028D E5*00            [12] 1479 	mov	a,_bp
      00028F 24 05            [12] 1480 	add	a,#0x05
      000291 F9               [12] 1481 	mov	r1,a
      000292 74 02            [12] 1482 	mov	a,#0x02
      000294 26               [12] 1483 	add	a, @r0
      000295 F7               [12] 1484 	mov	@r1,a
      000296 E4               [12] 1485 	clr	a
      000297 08               [12] 1486 	inc	r0
      000298 36               [12] 1487 	addc	a, @r0
      000299 09               [12] 1488 	inc	r1
      00029A F7               [12] 1489 	mov	@r1,a
      00029B 08               [12] 1490 	inc	r0
      00029C E6               [12] 1491 	mov	a,@r0
      00029D 09               [12] 1492 	inc	r1
      00029E F7               [12] 1493 	mov	@r1,a
      00029F E5*00            [12] 1494 	mov	a,_bp
      0002A1 24 05            [12] 1495 	add	a,#0x05
      0002A3 F8               [12] 1496 	mov	r0,a
      0002A4 86 82            [24] 1497 	mov	dpl,@r0
      0002A6 08               [12] 1498 	inc	r0
      0002A7 86 83            [24] 1499 	mov	dph,@r0
      0002A9 08               [12] 1500 	inc	r0
      0002AA 86 F0            [24] 1501 	mov	b,@r0
      0002AC E5*00            [12] 1502 	mov	a,_bp
      0002AE 24 0B            [12] 1503 	add	a,#0x0b
      0002B0 F9               [12] 1504 	mov	r1,a
      0002B1 12r00r00         [24] 1505 	lcall	__gptrget
      0002B4 F7               [12] 1506 	mov	@r1,a
                                   1507 ;	/Users/ambadran717/.stc/uni-stc/hal/fifo-buffer.c:92: for (uint8_t n = 0; n < count; n++) {
      0002B5 A8*00            [24] 1508 	mov	r0,_bp
      0002B7 08               [12] 1509 	inc	r0
      0002B8 E5*00            [12] 1510 	mov	a,_bp
      0002BA 24 08            [12] 1511 	add	a,#0x08
      0002BC F9               [12] 1512 	mov	r1,a
      0002BD 74 05            [12] 1513 	mov	a,#0x05
      0002BF 26               [12] 1514 	add	a, @r0
      0002C0 F7               [12] 1515 	mov	@r1,a
      0002C1 E4               [12] 1516 	clr	a
      0002C2 08               [12] 1517 	inc	r0
      0002C3 36               [12] 1518 	addc	a, @r0
      0002C4 09               [12] 1519 	inc	r1
      0002C5 F7               [12] 1520 	mov	@r1,a
      0002C6 08               [12] 1521 	inc	r0
      0002C7 E6               [12] 1522 	mov	a,@r0
      0002C8 09               [12] 1523 	inc	r1
      0002C9 F7               [12] 1524 	mov	@r1,a
      0002CA E5*00            [12] 1525 	mov	a,_bp
      0002CC 24 0C            [12] 1526 	add	a,#0x0c
      0002CE F8               [12] 1527 	mov	r0,a
      0002CF 76 00            [12] 1528 	mov	@r0,#0x00
      0002D1                       1529 00108$:
      0002D1 E5*00            [12] 1530 	mov	a,_bp
      0002D3 24 0C            [12] 1531 	add	a,#0x0c
      0002D5 F8               [12] 1532 	mov	r0,a
      0002D6 E5*00            [12] 1533 	mov	a,_bp
      0002D8 24 FA            [12] 1534 	add	a,#0xfa
      0002DA F9               [12] 1535 	mov	r1,a
      0002DB C3               [12] 1536 	clr	c
      0002DC E6               [12] 1537 	mov	a,@r0
      0002DD 97               [12] 1538 	subb	a,@r1
      0002DE 40 03            [24] 1539 	jc	00138$
      0002E0 02r03r6D         [24] 1540 	ljmp	00103$
      0002E3                       1541 00138$:
                                   1542 ;	/Users/ambadran717/.stc/uni-stc/hal/fifo-buffer.c:93: if (rIndex == buffer->size) {
      0002E3 A8*00            [24] 1543 	mov	r0,_bp
      0002E5 08               [12] 1544 	inc	r0
      0002E6 86 82            [24] 1545 	mov	dpl,@r0
      0002E8 08               [12] 1546 	inc	r0
      0002E9 86 83            [24] 1547 	mov	dph,@r0
      0002EB 08               [12] 1548 	inc	r0
      0002EC 86 F0            [24] 1549 	mov	b,@r0
      0002EE 12r00r00         [24] 1550 	lcall	__gptrget
      0002F1 FD               [12] 1551 	mov	r5,a
      0002F2 E5*00            [12] 1552 	mov	a,_bp
      0002F4 24 0B            [12] 1553 	add	a,#0x0b
      0002F6 F8               [12] 1554 	mov	r0,a
      0002F7 E6               [12] 1555 	mov	a,@r0
      0002F8 B5 05 07         [24] 1556 	cjne	a,ar5,00102$
                                   1557 ;	/Users/ambadran717/.stc/uni-stc/hal/fifo-buffer.c:94: rIndex = 0;
      0002FB E5*00            [12] 1558 	mov	a,_bp
      0002FD 24 0B            [12] 1559 	add	a,#0x0b
      0002FF F8               [12] 1560 	mov	r0,a
      000300 76 00            [12] 1561 	mov	@r0,#0x00
      000302                       1562 00102$:
                                   1563 ;	/Users/ambadran717/.stc/uni-stc/hal/fifo-buffer.c:98: ((uint8_t *) data)[n] = buffer->data[rIndex];
      000302 C0 02            [24] 1564 	push	ar2
      000304 C0 03            [24] 1565 	push	ar3
      000306 C0 04            [24] 1566 	push	ar4
      000308 E5*00            [12] 1567 	mov	a,_bp
      00030A 24 FB            [12] 1568 	add	a,#0xfb
      00030C F8               [12] 1569 	mov	r0,a
      00030D 86 03            [24] 1570 	mov	ar3,@r0
      00030F 08               [12] 1571 	inc	r0
      000310 86 04            [24] 1572 	mov	ar4,@r0
      000312 08               [12] 1573 	inc	r0
      000313 86 05            [24] 1574 	mov	ar5,@r0
      000315 E5*00            [12] 1575 	mov	a,_bp
      000317 24 0C            [12] 1576 	add	a,#0x0c
      000319 F8               [12] 1577 	mov	r0,a
      00031A E6               [12] 1578 	mov	a,@r0
      00031B 2B               [12] 1579 	add	a, r3
      00031C FB               [12] 1580 	mov	r3,a
      00031D E4               [12] 1581 	clr	a
      00031E 3C               [12] 1582 	addc	a, r4
      00031F FC               [12] 1583 	mov	r4,a
      000320 E5*00            [12] 1584 	mov	a,_bp
      000322 24 08            [12] 1585 	add	a,#0x08
      000324 F8               [12] 1586 	mov	r0,a
      000325 86 82            [24] 1587 	mov	dpl,@r0
      000327 08               [12] 1588 	inc	r0
      000328 86 83            [24] 1589 	mov	dph,@r0
      00032A 08               [12] 1590 	inc	r0
      00032B 86 F0            [24] 1591 	mov	b,@r0
      00032D 12r00r00         [24] 1592 	lcall	__gptrget
      000330 FA               [12] 1593 	mov	r2,a
      000331 A3               [24] 1594 	inc	dptr
      000332 12r00r00         [24] 1595 	lcall	__gptrget
      000335 FE               [12] 1596 	mov	r6,a
      000336 A3               [24] 1597 	inc	dptr
      000337 12r00r00         [24] 1598 	lcall	__gptrget
      00033A FF               [12] 1599 	mov	r7,a
      00033B E5*00            [12] 1600 	mov	a,_bp
      00033D 24 0B            [12] 1601 	add	a,#0x0b
      00033F F8               [12] 1602 	mov	r0,a
      000340 E6               [12] 1603 	mov	a,@r0
      000341 2A               [12] 1604 	add	a, r2
      000342 FA               [12] 1605 	mov	r2,a
      000343 E4               [12] 1606 	clr	a
      000344 3E               [12] 1607 	addc	a, r6
      000345 FE               [12] 1608 	mov	r6,a
      000346 8A 82            [24] 1609 	mov	dpl,r2
      000348 8E 83            [24] 1610 	mov	dph,r6
      00034A 8F F0            [24] 1611 	mov	b,r7
      00034C 12r00r00         [24] 1612 	lcall	__gptrget
      00034F 8B 82            [24] 1613 	mov	dpl,r3
      000351 8C 83            [24] 1614 	mov	dph,r4
      000353 8D F0            [24] 1615 	mov	b,r5
      000355 12r00r00         [24] 1616 	lcall	__gptrput
                                   1617 ;	/Users/ambadran717/.stc/uni-stc/hal/fifo-buffer.c:99: rIndex++;
      000358 E5*00            [12] 1618 	mov	a,_bp
      00035A 24 0B            [12] 1619 	add	a,#0x0b
      00035C F8               [12] 1620 	mov	r0,a
      00035D 06               [12] 1621 	inc	@r0
                                   1622 ;	/Users/ambadran717/.stc/uni-stc/hal/fifo-buffer.c:92: for (uint8_t n = 0; n < count; n++) {
      00035E E5*00            [12] 1623 	mov	a,_bp
      000360 24 0C            [12] 1624 	add	a,#0x0c
      000362 F8               [12] 1625 	mov	r0,a
      000363 06               [12] 1626 	inc	@r0
      000364 D0 04            [24] 1627 	pop	ar4
      000366 D0 03            [24] 1628 	pop	ar3
      000368 D0 02            [24] 1629 	pop	ar2
      00036A 02r02rD1         [24] 1630 	ljmp	00108$
      00036D                       1631 00103$:
                                   1632 ;	/Users/ambadran717/.stc/uni-stc/hal/fifo-buffer.c:102: buffer->rIndex = rIndex;
      00036D E5*00            [12] 1633 	mov	a,_bp
      00036F 24 05            [12] 1634 	add	a,#0x05
      000371 F8               [12] 1635 	mov	r0,a
      000372 86 82            [24] 1636 	mov	dpl,@r0
      000374 08               [12] 1637 	inc	r0
      000375 86 83            [24] 1638 	mov	dph,@r0
      000377 08               [12] 1639 	inc	r0
      000378 86 F0            [24] 1640 	mov	b,@r0
      00037A E5*00            [12] 1641 	mov	a,_bp
      00037C 24 0B            [12] 1642 	add	a,#0x0b
      00037E F9               [12] 1643 	mov	r1,a
      00037F E7               [12] 1644 	mov	a,@r1
      000380 12r00r00         [24] 1645 	lcall	__gptrput
                                   1646 ;	/Users/ambadran717/.stc/uni-stc/hal/fifo-buffer.c:103: buffer->length -= count;
      000383 8A 82            [24] 1647 	mov	dpl,r2
      000385 8B 83            [24] 1648 	mov	dph,r3
      000387 8C F0            [24] 1649 	mov	b,r4
      000389 12r00r00         [24] 1650 	lcall	__gptrget
      00038C FF               [12] 1651 	mov	r7,a
      00038D E5*00            [12] 1652 	mov	a,_bp
      00038F 24 FA            [12] 1653 	add	a,#0xfa
      000391 F8               [12] 1654 	mov	r0,a
      000392 EF               [12] 1655 	mov	a,r7
      000393 C3               [12] 1656 	clr	c
      000394 96               [12] 1657 	subb	a,@r0
      000395 8A 82            [24] 1658 	mov	dpl,r2
      000397 8B 83            [24] 1659 	mov	dph,r3
      000399 8C F0            [24] 1660 	mov	b,r4
      00039B 12r00r00         [24] 1661 	lcall	__gptrput
      00039E                       1662 00105$:
                                   1663 ;	/Users/ambadran717/.stc/uni-stc/hal/fifo-buffer.c:106: return rc;
      00039E E5*00            [12] 1664 	mov	a,_bp
      0003A0 24 04            [12] 1665 	add	a,#0x04
      0003A2 F8               [12] 1666 	mov	r0,a
      0003A3 86 82            [24] 1667 	mov	dpl, @r0
                                   1668 ;	/Users/ambadran717/.stc/uni-stc/hal/fifo-buffer.c:107: }
      0003A5 85*00 81         [24] 1669 	mov	sp,_bp
      0003A8 D0*00            [24] 1670 	pop	_bp
      0003AA 22               [24] 1671 	ret
                                   1672 	.area CSEG    (CODE)
                                   1673 	.area CONST   (CODE)
                                   1674 	.area XINIT   (CODE)
                                   1675 	.area CABS    (ABS,CODE)
